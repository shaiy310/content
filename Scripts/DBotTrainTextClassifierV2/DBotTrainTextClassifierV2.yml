args:
- default: false
  description: The input file entry ID or json string
  isArray: false
  name: input
  required: true
  secret: false
- default: false
  defaultValue: phishing_model
  description: The model name to store in the system
  isArray: false
  name: modelName
  required: false
  secret: false
- auto: PREDEFINED
  default: false
  defaultValue: 'true'
  description: Whether to store the model in the system
  isArray: false
  name: storeModel
  predefined:
  - 'true'
  - 'false'
  required: false
  secret: false
- auto: PREDEFINED
  default: false
  defaultValue: 'false'
  description: Override existing model if model with the same name exist
  isArray: false
  name: overrideExistingModel
  predefined:
  - 'true'
  - 'false'
  required: false
  secret: false
- default: false
  defaultValue: '0.82'
  description: The target accuracy we would like to achieve. Value in range 0-1
  isArray: false
  name: targetAccuracy
  required: false
  secret: false
- default: false
  defaultValue: '0.33'
  description: Maximum nubmer of samples below threshold, for the target accuracy
  isArray: false
  name: maxBelowThreshold
  required: false
  secret: false
- default: false
  description: The field name with the label
  isArray: false
  name: tagField
  required: true
  secret: false
- default: false
  defaultValue: dbot_processed_text
  description: The field name with the text to train
  isArray: false
  name: textField
  required: false
  secret: false
- default: false
  defaultValue: '*'
  description: 'Comma-separated values of email tags values and mapping. The script
    going to consider only the tags specify in this field. You can map label to another
    value by using this format: LABEL:MAPPED_LABEL. For example: let''''s say we have
    4 values in email tag: malicious, credentials harvesting, inner communitcation,
    external legit email, unclassified. While training, we want to ignore "unclassified"
    tag, and refer to "credentials harvesting" as "malicious" too. Also, we want to     merge
    "inner communitcation" and "external legit email" to one tag called "non-malicious".
    The input will be: malicious, credentials harvesting:malicious, inner communitcation:non-malicious,
    external legit email:non-malicious'
  isArray: false
  name: phishingLabels
  required: false
  secret: false
- auto: PREDEFINED
  default: false
  defaultValue: filename
  description: "The input type\t"
  isArray: false
  name: inputType
  predefined:
  - json
  - json_string
  - filename
  required: false
  secret: false
- default: false
  defaultValue: '0.05'
  description: Minimum score of a word to consider as keyword, value 0-1
  isArray: false
  name: keywordMinScore
  required: false
  secret: false
comment: Train a machine learning text classifier
commonfields:
  id: d7105a84-8fd8-45a4-b2d7-2b0c01062871
  version: -1
enabled: false
name: DBotTrainTextClassifierV2
script: '-'
system: false
tags:
- ml
timeout: '0'
type: python
dockerimage: demisto/dl:1.4
fromversion: 4.5.0
