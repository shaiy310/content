commonfields:
  id: ExtractDomainFromUrlAndEmail
  version: -1
name: ExtractDomainFromUrlAndEmail
script: |-
  from tld import get_tld
  from validate_email import validate_email
  import re

  def extract_domain(the_input):
      is_email = validate_email(the_input)
      if is_email:
          domain = re.search('@[\w.]+', the_input)
          if len(domain.group()) > 0:
              return(domain.group()[1:])
      else:
          domain = get_tld(the_input, fail_silently=True)
          if not domain:
              the_input_with_http = 'https://' + the_input
              domain = get_tld(the_input_with_http, fail_silently=True)
              if domain:
                  return(domain)
              else:
                 return('')
          else:
              return(domain)

  domains = []
  the_input = demisto.args().get('input')

  if isinstance(the_input, str):
      the_input = argToList(the_input)

  # Otherwise assumes it's an array
  for item in the_input:
      domains.append(extract_domain(item))
  demisto.results(domains)
type: python
tags:
- indicator-format
comment: Extract Domain from a URL or Email
enabled: true
args:
- name: input
  required: true
  default: true
  description: The URL(s) or Email(s) to process
scripttarget: 0
runonce: false
dockerimage: demisto/tld
runas: DBotWeakRole
releaseNotes: Update script to accept array input
tests:
  - ExtractDomainFromEmailTest
