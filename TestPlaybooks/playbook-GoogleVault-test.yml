id: Google-Vault-Generic-Test
version: -1
name: Google Vault Generic Test
description: This is a test for the Google Vault integration. It calls a variety of
  commands of the integration. If the whole playbook succeeds, then the integration
  is working correctly.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 7a2c8c3b-ce55-4853-815b-3c1aed3776f6
    type: start
    task:
      id: 7a2c8c3b-ce55-4853-815b-3c1aed3776f6
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 175,
          "y": 235
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: 523651f7-e3df-4ae3-84ee-b050e6d87e51
    type: regular
    task:
      id: 523651f7-e3df-4ae3-84ee-b050e6d87e51
      version: -1
      name: Create matter "playbook test matter + date"
      description: Creates a new matter with the given name and description. The initial
        state is open, and the owner is the method caller. First, checks if a matter
        with the same name already exists.
      script: '|||gvault-create-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
      - "3"
    scriptarguments:
      description:
        simple: wow
      name:
        simple: ${.='playbook test matter ' +  new Date()}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 175,
          "y": 580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: ea01ad04-66f7-4368-8dd5-aceff1d0915f
    type: regular
    task:
      id: ea01ad04-66f7-4368-8dd5-aceff1d0915f
      version: -1
      name: Verify matter name
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: GoogleVault.Matter.Name
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -40,
          "y": 755
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: 775067f5-bd39-45f8-800a-726e9d17b040
    type: regular
    task:
      id: 775067f5-bd39-45f8-800a-726e9d17b040
      version: -1
      name: Verify matter ID
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: GoogleVault.Matter.MatterID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 390,
          "y": 755
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: 30af7658-f234-4001-826d-fe1ca93bb406
    type: regular
    task:
      id: 30af7658-f234-4001-826d-fe1ca93bb406
      version: -1
      name: Get created matter
      description: Checks if we can get the matter information of the matter that
        was previously created.
      script: '|||gvault-get-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "15"
      - "24"
    scriptarguments:
      matterID: {}
      matterName:
        simple: ${GoogleVault.Matter.Name}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 175,
          "y": 1000
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "8":
    id: "8"
    taskid: 99e04b36-1f84-459c-881a-7acc99bad1e6
    type: regular
    task:
      id: 99e04b36-1f84-459c-881a-7acc99bad1e6
      version: -1
      name: Delete Context
      description: Deletes the current context to prevent interference of old remaining
        data from failing the playbook. You can ignore this part, as it is only a
        preventative measure for technical purposes.
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 175,
          "y": 405
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: cdc93238-db7e-41e9-8fab-b5993bc25342
    type: regular
    task:
      id: cdc93238-db7e-41e9-8fab-b5993bc25342
      version: -1
      name: Create Hold For Account ID 116238185592796178843
      script: '|||gvault-create-hold'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      account: {}
      accountID:
        simple: "116238185592796178843"
      corpus:
        simple: Mail
      endTime: {}
      holdName:
        simple: Test Playbook Hold 1
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
      startTime: {}
      terms: {}
      timeFrame: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 365,
          "y": 1250
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: 3f3a515d-31df-4139-895d-185c846d48a7
    type: regular
    task:
      id: 3f3a515d-31df-4139-895d-185c846d48a7
      version: -1
      name: Add Held Account 103020731686044834269
      script: '|||gvault-add-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "17"
      - "18"
    scriptarguments:
      account: {}
      accountID:
        simple: "103020731686044834269"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 365,
          "y": 1425
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "17":
    id: "17"
    taskid: 1ed908c5-1333-40db-85e6-3557529cee7c
    type: regular
    task:
      id: 1ed908c5-1333-40db-85e6-3557529cee7c
      version: -1
      name: Remove Held Account
      script: '|||gvault-remove-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      account: {}
      accountID:
        simple: "116238185592796178843"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 580,
          "y": 1600
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: 51be6650-90cd-4d2a-80bd-084ec3da3a67
    type: regular
    task:
      id: 51be6650-90cd-4d2a-80bd-084ec3da3a67
      version: -1
      name: 'Remove Held Account '
      script: '|||gvault-remove-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      account: {}
      accountID:
        simple: "103020731686044834269"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 150,
          "y": 1600
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "19":
    id: "19"
    taskid: b6b05a20-8cca-4548-8067-74980eb88073
    type: regular
    task:
      id: b6b05a20-8cca-4548-8067-74980eb88073
      version: -1
      name: Delete Hold
      script: '|||gvault-delete-hold'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 365,
          "y": 1775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "20":
    id: "20"
    taskid: 4d4132f9-3850-4087-8324-fddef1bef647
    type: regular
    task:
      id: 4d4132f9-3850-4087-8324-fddef1bef647
      version: -1
      name: Create mail export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "37"
    scriptarguments:
      IncludeDrafts: {}
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com,dbot@demistodev.com
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='email_test_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      includeDrafts:
        simple: "true"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Specific Accounts(requires emails argument)
      startTime: {}
      terms:
        simple: subject:test
      timeFrame:
        simple: 7 days ago
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2060
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "21":
    id: "21"
    taskid: e1414a9a-ab96-43c9-850a-5a5bb67c06a6
    type: regular
    task:
      id: e1414a9a-ab96-43c9-850a-5a5bb67c06a6
      version: -1
      name: Get Export Status
      script: '|||gvault-export-status'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    scriptarguments:
      exportID:
        complex:
          root: GoogleVault
          accessor: Matter.Export.ExportID
      exportIDS:
        simple: ${GoogleVault.Matter.Export.ExportID}
      matterId:
        simple: ${GoogleVault.Matter.MatterID}
      queryIDS: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 3050
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "24":
    id: "24"
    taskid: 994b6c12-66ab-4948-89d5-64c6010e19da
    type: title
    task:
      id: 994b6c12-66ab-4948-89d5-64c6010e19da
      version: -1
      name: Create Exports
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1250
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "26":
    id: "26"
    taskid: 25eea044-0b8d-4043-8d38-52ff6635b5a2
    type: regular
    task:
      id: 25eea044-0b8d-4043-8d38-52ff6635b5a2
      version: -1
      name: GeneratePassword
      description: "This function generates a password and allows various parameters
        to customize the properties of the password depending on the use case (e.g.
        password complexity requirements).  The default behavior is to generate a
        password of  *random length* including all four character classes (upper,
        lower, digits, symbols) with at least five and at most ten characters per
        class. \n\nThe min_* values all default to 0. This means that if the command
        is executed in this way:\n!GeneratePassword max_lcase=10\nIt is possible that
        a password of length zero could be generated. It is therefore recommended
        to always include a min_* parameter that matches. \n\nThe debug parameter
        will print certain properties of the command into the WarRoom for easy diagnostics."
      scriptName: GeneratePassword
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      debug: {}
      max_digits:
        simple: "2"
      max_lcase:
        simple: "2"
      max_symbols:
        simple: "0"
      max_ucase:
        simple: "2"
      min_digits:
        simple: "2"
      min_lcase:
        simple: "2"
      min_symbols: {}
      min_ucase:
        simple: "2"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "27":
    id: "27"
    taskid: a8e8eac0-1bdb-4d66-8a08-241deb99b5ff
    type: regular
    task:
      id: a8e8eac0-1bdb-4d66-8a08-241deb99b5ff
      version: -1
      name: Create groups export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-groups'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='groups_test_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      groups:
        simple: maya-group-test@demistodev.com,ido-group-test@demistodev.com
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      startTime: {}
      terms: {}
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1820
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "29":
    id: "29"
    taskid: da60bf49-b9d1-49ca-8553-44ba6731f5c8
    type: regular
    task:
      id: da60bf49-b9d1-49ca-8553-44ba6731f5c8
      version: -1
      name: Create drive export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-drive'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com
      endTime: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='drive_test_export_' + val +'_time_' + Date.now()
      includeTeamDrives:
        simple: "false"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Team Drive
      startTime: {}
      teamDrive:
        simple: 0ANbMMsaWJNw2Uk9PVA,0AOM4L2G2JU4NUk9PVA
      terms: {}
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "30":
    id: "30"
    taskid: e10fcf76-1065-4749-85c5-ab6c8ba83427
    type: regular
    task:
      id: e10fcf76-1065-4749-85c5-ab6c8ba83427
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 1690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "31":
    id: "31"
    taskid: 81936428-4c73-481e-8391-a7b2c2a2eeee
    type: regular
    task:
      id: 81936428-4c73-481e-8391-a7b2c2a2eeee
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 1930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "32":
    id: "32"
    taskid: 512b7482-750e-4fc7-8fca-98727a385f5b
    type: regular
    task:
      id: 512b7482-750e-4fc7-8fca-98727a385f5b
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 1450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "33":
    id: "33"
    taskid: cab9c43c-a976-401a-8b6a-a549cfd1ac00
    type: title
    task:
      id: cab9c43c-a976-401a-8b6a-a549cfd1ac00
      version: -1
      name: Get results
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
      - "35"
      - "36"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 3290
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "34":
    id: "34"
    taskid: 0db67db1-dd85-408a-82b0-aefae9c53206
    type: regular
    task:
      id: 0db67db1-dd85-408a-82b0-aefae9c53206
      version: -1
      name: Get Drive Results
      script: '|||gvault-get-drive-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: ${GoogleVault.Matter.Export.[0].BucketName}
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Matter.Export(val.ExportName.indexOf('drive') != -1
          && val.Status == 'COMPLETED').ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -850,
          "y": 3550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "35":
    id: "35"
    taskid: f71ffe38-295b-462e-8699-35507cf2101b
    type: regular
    task:
      id: f71ffe38-295b-462e-8699-35507cf2101b
      version: -1
      name: Get Mail Results
      script: '|||gvault-get-mail-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: ${GoogleVault.Matter.Export.[0].BucketName}
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Matter.Export(val.ExportName.indexOf('mail') != -1 &&
          val.Status == 'COMPLETED').ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 3550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "36":
    id: "36"
    taskid: 35313cb5-5e21-461d-83a2-69ca7642c0c7
    type: regular
    task:
      id: 35313cb5-5e21-461d-83a2-69ca7642c0c7
      version: -1
      name: Get Groups Results
      script: '|||gvault-get-groups-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: ${GoogleVault.Matter.Export.[0].BucketName}
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Matter.Export(val.ExportName.indexOf('groups') != -1
          && val.Status == 'COMPLETED').ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 180,
          "y": 3550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "37":
    id: "37"
    taskid: 915007e1-564a-4d57-8680-9f6348405c3a
    type: regular
    task:
      id: 915007e1-564a-4d57-8680-9f6348405c3a
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "38"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 2180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "38":
    id: "38"
    taskid: 170b2010-0d0f-46d5-8a05-5579d7f95bb0
    type: regular
    task:
      id: 170b2010-0d0f-46d5-8a05-5579d7f95bb0
      version: -1
      name: Create empty drive export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-drive'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "39"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com
      endTime: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='drive_empty_export_' + val +'_time_' + Date.now()
      includeTeamDrives:
        simple: "false"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Team Drive
      startTime: {}
      teamDrive:
        simple: 0ANbMMsaWJNw2Uk9PVA,0AOM4L2G2JU4NUk9PVA
      terms:
        simple: Paris in summer
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "39":
    id: "39"
    taskid: 71a21ce3-fb27-4067-870e-f0d5cba93fdd
    type: regular
    task:
      id: 71a21ce3-fb27-4067-870e-f0d5cba93fdd
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "40"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 2440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "40":
    id: "40"
    taskid: 860ede8b-9225-4fdb-83ba-6eed8e945cb3
    type: regular
    task:
      id: 860ede8b-9225-4fdb-83ba-6eed8e945cb3
      version: -1
      name: Create empty groups export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-groups'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "42"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='groups_empty_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      groups:
        simple: maya-group-test@demistodev.com,ido-group-test@demistodev.com
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      startTime: {}
      terms:
        simple: Believe in the power of content
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2550
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "41":
    id: "41"
    taskid: 4114c295-a2fc-4161-8849-83cb608b38b0
    type: regular
    task:
      id: 4114c295-a2fc-4161-8849-83cb608b38b0
      version: -1
      name: Create empty mail export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "43"
    scriptarguments:
      IncludeDrafts: {}
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com,dbot@demistodev.com
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: .='email_empty_export_' + val +'_time_' + Date.now()
      exportPST:
        simple: "true"
      includeDrafts:
        simple: "true"
      matterID:
        simple: ${GoogleVault.Matter.MatterID}
      matterName: {}
      ou: {}
      searchMethod:
        simple: Specific Accounts(requires emails argument)
      startTime: {}
      terms:
        simple: 'Chuck Norris '
      timeFrame:
        simple: 7 days ago
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2805
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "42":
    id: "42"
    taskid: 7e687615-6807-41fa-870b-e9b7c822e591
    type: regular
    task:
      id: 7e687615-6807-41fa-870b-e9b7c822e591
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "41"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -750,
          "y": 2670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "43":
    id: "43"
    taskid: 5265a26a-c0e3-4b32-80a9-3a53ba5a4e99
    type: regular
    task:
      id: 5265a26a-c0e3-4b32-80a9-3a53ba5a4e99
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 2925
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3410,
        "width": 1810,
        "x": -850,
        "y": 235
      }
    }
  }
inputs: []
outputs: []
