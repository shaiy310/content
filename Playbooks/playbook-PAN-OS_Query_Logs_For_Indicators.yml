id: PAN-OS Query Logs For Indicators
version: -1
name: PAN-OS Query Logs For Indicators
fromversion: 4.5.0
description: 'Query PAN-OS Logs of types in one playbook: traffic, threat, url, data-filtering
  and wildfire. The playbook accepts inputs such as IP. hash, url.'
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: ba0019e7-88f8-453e-8c51-e258528ce2f5
    type: start
    task:
      id: ba0019e7-88f8-453e-8c51-e258528ce2f5
      version: -1
      name: ""
      description: Start
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 40,
          "y": -260
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: 35012ff3-a805-49ab-8212-3d01b2ecd69e
    type: condition
    task:
      id: 35012ff3-a805-49ab-8212-3d01b2ecd69e
      version: -1
      name: Is Palo Alto Networks PAN-OS enabled?
      description: Checks if there is a valid instance of the Palo Alto Networks PAN-OS
        integration enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "11"
      - "20"
      - "24"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Panorama
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                accessor: brand
            iscontext: true
    view: |-
      {
        "position": {
          "x": 40,
          "y": -60
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: 33471a8d-0347-4d2a-8538-66906e5e2742
    type: regular
    task:
      id: 33471a8d-0347-4d2a-8538-66906e5e2742
      version: -1
      name: Panorama query traffic logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip:
        complex:
          root: inputs.ip
      log-type:
        simple: traffic
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url: {}
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 420,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "3":
    id: "3"
    taskid: 655ca3f1-17bd-4a97-84f4-8fe38fdbc7a0
    type: playbook
    task:
      id: 655ca3f1-17bd-4a97-84f4-8fe38fdbc7a0
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        complex:
          root: Panorama
          accessor: Monitor.JobID
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: job_id
      PollingCommandName:
        simple: panorama-check-logs-status
      Timeout:
        simple: "10"
      dt:
        simple: Panorama.Monitor(val.Status != 'Completed' && val.Status != 'Failed').JobID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": -630,
          "y": 1310
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: e073a714-92d7-4f37-8ea0-b62b39f6dc9f
    type: regular
    task:
      id: e073a714-92d7-4f37-8ea0-b62b39f6dc9f
      version: -1
      name: Panorama Get Logs
      description: Retrieves logs query data by job ID.
      script: '|||panorama-get-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      ignore_auto_extract: {}
      job_id:
        complex:
          root: Panorama
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Panorama.Monitor.Status
                iscontext: true
              right:
                value:
                  simple: Completed
          accessor: Monitor.JobID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -630,
          "y": 1620
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: d42a62a5-c405-457d-8bb0-5b7cc0328006
    type: title
    task:
      id: d42a62a5-c405-457d-8bb0-5b7cc0328006
      version: -1
      name: Done
      description: Header
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 40,
          "y": 1790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "6":
    id: "6"
    taskid: fa956455-29e6-4aa6-837a-841e04523953
    type: regular
    task:
      id: fa956455-29e6-4aa6-837a-841e04523953
      version: -1
      name: Panorama Check Logs Status
      description: Checks the status of a logs query.
      script: '|||panorama-check-logs-status'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      job_id:
        complex:
          root: Panorama
          accessor: Monitor.JobID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -630,
          "y": 1460
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "7":
    id: "7"
    taskid: 0f7f5141-7dd0-4d9e-801a-6e78a800bae0
    type: condition
    task:
      id: 0f7f5141-7dd0-4d9e-801a-6e78a800bae0
      version: -1
      name: Is there a JobID for a query?
      description: Is there a JobID for a query?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "3"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: Panorama
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: Panorama.Monitor.Status
                      iscontext: true
                    right:
                      value:
                        simple: Pending
                accessor: Monitor.JobID
            iscontext: true
    view: |-
      {
        "position": {
          "x": -190,
          "y": 1100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 00973e17-3dfa-4adf-8fbf-5977d25dd4cd
    type: regular
    task:
      id: 00973e17-3dfa-4adf-8fbf-5977d25dd4cd
      version: -1
      name: Panorama query threat logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip:
        complex:
          root: inputs.ip
      log-type:
        simple: threat
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url: {}
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 830,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "11":
    id: "11"
    taskid: c076cd07-95f7-4833-8317-2421356c3455
    type: title
    task:
      id: c076cd07-95f7-4833-8317-2421356c3455
      version: -1
      name: IP search
      description: Header
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "12"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 350,
          "y": 110
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "12":
    id: "12"
    taskid: 745fe25b-408c-45f5-88c1-ab3c85f46e48
    type: condition
    task:
      id: 745fe25b-408c-45f5-88c1-ab3c85f46e48
      version: -1
      name: Is there an IP?
      description: Is there an IP?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "2"
      - "9"
      - "14"
      - "17"
      - "18"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.ip
            iscontext: true
    view: |-
      {
        "position": {
          "x": 350,
          "y": 240
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "14":
    id: "14"
    taskid: f642c3cd-2c33-4826-83f3-1113d9f633c7
    type: regular
    task:
      id: f642c3cd-2c33-4826-83f3-1113d9f633c7
      version: -1
      name: Panorama query wildfire logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip:
        complex:
          root: inputs.ip
      log-type:
        simple: wildfire
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url: {}
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1240,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "17":
    id: "17"
    taskid: 38032dee-3558-408b-869e-ee7c58e3a5e8
    type: regular
    task:
      id: 38032dee-3558-408b-869e-ee7c58e3a5e8
      version: -1
      name: Panorama query data logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip:
        complex:
          root: inputs.ip
      log-type:
        simple: data
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url: {}
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1650,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: 8ddb4658-f6f7-44f2-8774-1fbda9e69624
    type: regular
    task:
      id: 8ddb4658-f6f7-44f2-8774-1fbda9e69624
      version: -1
      name: Panorama query url logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip:
        complex:
          root: inputs.ip
      log-type:
        simple: url
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url: {}
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2050,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "20":
    id: "20"
    taskid: 4fc894a6-987b-452e-8f5e-02034769725e
    type: title
    task:
      id: 4fc894a6-987b-452e-8f5e-02034769725e
      version: -1
      name: Hash Search
      description: Header
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -290,
          "y": 110
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "21":
    id: "21"
    taskid: 84bc7aa8-c8ee-4c3b-8268-9c4712be3605
    type: condition
    task:
      id: 84bc7aa8-c8ee-4c3b-8268-9c4712be3605
      version: -1
      name: Is there a hash?
      description: Is there a hash?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "23"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.filedigest
            iscontext: true
    view: |-
      {
        "position": {
          "x": -290,
          "y": 240
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "23":
    id: "23"
    taskid: 2f520c30-a57c-4e8b-8048-a3a91f667f66
    type: regular
    task:
      id: 2f520c30-a57c-4e8b-8048-a3a91f667f66
      version: -1
      name: Panorama query wildfire logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest:
        complex:
          root: inputs.filedigest
      ip: {}
      log-type:
        simple: wildfire
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url: {}
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -190,
          "y": 860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "24":
    id: "24"
    taskid: fb79e6f2-4589-413a-8dd9-0f846d84abcf
    type: title
    task:
      id: fb79e6f2-4589-413a-8dd9-0f846d84abcf
      version: -1
      name: Url search
      description: Header
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "25"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1270,
          "y": 110
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "25":
    id: "25"
    taskid: 18d3e16b-b5f5-4575-8032-ac390c23bbee
    type: condition
    task:
      id: 18d3e16b-b5f5-4575-8032-ac390c23bbee
      version: -1
      name: Is there a url?
      description: Is there a url?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "30"
      - "32"
      - "31"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.url
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1270,
          "y": 240
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "30":
    id: "30"
    taskid: 5607fb54-ad5f-4dd3-88e2-c0ba2d6583d3
    type: regular
    task:
      id: 5607fb54-ad5f-4dd3-88e2-c0ba2d6583d3
      version: -1
      name: Panorama query threat logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip: {}
      log-type:
        simple: threat
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url:
        complex:
          root: inputs.url
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2100,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "31":
    id: "31"
    taskid: ec5d3d2f-eb21-46a9-86fd-a0b4f30659a9
    type: regular
    task:
      id: ec5d3d2f-eb21-46a9-86fd-a0b4f30659a9
      version: -1
      name: Panorama query data logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip: {}
      log-type:
        simple: data
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url:
        complex:
          root: inputs.url
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1270,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "32":
    id: "32"
    taskid: 150206bc-f8f3-46c7-87c2-98c3eb30920e
    type: regular
    task:
      id: 150206bc-f8f3-46c7-87c2-98c3eb30920e
      version: -1
      name: Panorama query url logs
      description: Query logs
      script: '|||panorama-query-logs'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      action: {}
      addr-dst: {}
      addr-src: {}
      filedigest: {}
      ip: {}
      log-type:
        simple: url
      number_of_logs: {}
      port-dst: {}
      query: {}
      rule: {}
      time-generated: {}
      url:
        complex:
          root: inputs.url
      zone-dst: {}
      zone-src: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1680,
          "y": 610
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "1_5_#default#": 0.9
    },
    "paper": {
      "dimensions": {
        "height": 2115,
        "width": 4530,
        "x": -2100,
        "y": -260
      }
    }
  }
inputs:
- key: url
  value: {}
  required: false
  description: 'URL, for example: "safebrowsing.googleapis.com".'
- key: filedigest
  value: {}
  required: false
  description: File hash (for WildFIre logs only).
- key: ip
  value: {}
  required: false
  description: Source or destination address
outputs:
- contextPath: Panorama.Monitor
  description: Monitor logs object.
  type: string
- contextPath: Panorama.Monitor.Logs.Action
  description: Action taken for the session. Can be "alert", "allow", "deny", "drop",
    "drop-all-packets", "reset-client", "reset-server", "reset-both", or "block-url".
  type: string
- contextPath: Panorama.Monitor.Logs.Application
  description: Application associated with the session.
  type: string
- contextPath: Panorama.Monitor.Logs.Category
  description: For URL subtype, it is the URL category; For WildFire subtype, it is
    the verdict on the file and is either ‘malicious’, ‘phishing’, ‘grayware’, or
    ‘benign’; For other subtypes, the value is ‘any’.
  type: string
- contextPath: Panorama.Monitor.Logs.DeviceName
  description: The hostname of the firewall on which the session was logged.
  type: string
- contextPath: Panorama.Monitor.Logs.DestinationAddress
  description: Original session destination IP address.
  type: string
- contextPath: Panorama.Monitor.Logs.DestinationUser
  description: Username of the user to which the session was destined.
  type: string
- contextPath: Panorama.Monitor.Logs.DestinationCountry
  description: Destination country or internal region for private addresses. Maximum
    length is 32 bytes.
  type: string
- contextPath: Panorama.Monitor.Logs.DestinationPort
  description: Destination port utilized by the session.
  type: string
- contextPath: Panorama.Monitor.Logs.FileDigest
  description: |-
    Only for WildFire subtype; all other types do not use this field.
    The filedigest string shows the binary hash of the file sent to be analyzed by the WildFire service.
  type: string
- contextPath: Panorama.Monitor.Logs.FileName
  description: |-
    File name or file type when the subtype is file.
    File name when the subtype is virus.
    File name when the subtype is wildfire-virus.
    File name when the subtype is wildfire.
  type: string
- contextPath: Panorama.Monitor.Logs.FileType
  description: |-
    Only for the WildFire subtype; all other types do not use this field.
    Specifies the type of file that the firewall forwarded for WildFire analysis.
  type: string
- contextPath: Panorama.Monitor.Logs.FromZone
  description: Zone the session was sourced from.
  type: string
- contextPath: Panorama.Monitor.Logs.URLOrFilename
  description: |-
    The actual URI when the subtype is url.
    File name or file type when the subtype is file.
    File name when the subtype is virus.
    File name when the subtype is wildfire-virus.
    File name when the subtype is wildfire.
    URL or file name when the subtype is vulnerability if applicable.
  type: string
- contextPath: Panorama.Monitor.Logs.NATDestinationIP
  description: If destination NAT performed, the post-NAT destination IP address.
  type: string
- contextPath: Panorama.Monitor.Logs.NATDestinationPort
  description: Post-NAT destination port.
  type: string
- contextPath: Panorama.Monitor.Logs.NATSourceIP
  description: If source NAT performed, the post-NAT source IP address.
  type: string
- contextPath: Panorama.Monitor.Logs.NATSourcePort
  description: Post-NAT source port.
  type: string
- contextPath: Panorama.Monitor.Logs.PCAPid
  description: The packet capture (pcap) ID is a 64 bit unsigned integral denoting
    an ID to correlate threat pcap files with extended pcaps taken as a part of that
    flow. All threat logs will contain either a pcap_id of 0 (no associated pcap),
    or an ID referencing the extended pcap file.
  type: string
- contextPath: Panorama.Monitor.Logs.IPProtocol
  description: IP protocol associated with the session.
  type: string
- contextPath: Panorama.Monitor.Logs.Recipient
  description: |-
    Only for the WildFire subtype; all other types do not use this field.
    Specifies the name of the receiver of an email that WildFire determined to be malicious when analyzing an email link forwarded by the firewall.
  type: string
- contextPath: Panorama.Monitor.Logs.Rule
  description: Name of the rule that the session matched.
  type: string
- contextPath: Panorama.Monitor.Logs.RuleID
  description: ID of the rule that the session matched.
  type: string
- contextPath: Panorama.Monitor.Logs.ReceiveTime
  description: Time the log was received at the management plane.
  type: string
- contextPath: Panorama.Monitor.Logs.Sender
  description: |-
    Only for the WildFire subtype; all other types do not use this field.
    Specifies the name of the sender of an email that WildFire determined to be malicious when analyzing an email link forwarded by the firewall.
  type: string
- contextPath: Panorama.Monitor.Logs.SessionID
  description: An internal numerical identifier applied to each session.
  type: string
- contextPath: Panorama.Monitor.Logs.DeviceSN
  description: The serial number of the firewall on which the session was logged.
  type: string
- contextPath: Panorama.Monitor.Logs.Severity
  description: Severity associated with the threat. Can be "informational", "low",
    "medium", "high", or "critical".
  type: string
- contextPath: Panorama.Monitor.Logs.SourceAddress
  description: Original session source IP address.
  type: string
- contextPath: Panorama.Monitor.Logs.SourceCountry
  description: Source country or internal region for private addresses. Maximum length
    is 32 bytes.
  type: string
- contextPath: Panorama.Monitor.Logs.SourceUser
  description: Username of the user who initiated the session.
  type: string
- contextPath: Panorama.Monitor.Logs.SourcePort
  description: Source port utilized by the session.
  type: string
- contextPath: Panorama.Monitor.Logs.Name
  description: Palo Alto Networks identifier for the threat. It is a description string
    followed by a 64-bit numerical identifier.
  type: string
- contextPath: Panorama.Monitor.Logs.ID
  description: Palo Alto Networks ID for the threat.
  type: string
- contextPath: Panorama.Monitor.Logs.ToZone
  description: The zone to which the session was destined.
  type: string
- contextPath: Panorama.Monitor.Logs.TimeGenerated
  description: Time that the log was generated on the dataplane.
  type: string
- contextPath: Panorama.Monitor.Logs.URLCategoryList
  description: A list of the URL filtering categories that the firewall used to enforce
    policy.
  type: string
- contextPath: Panorama.Monitor.JobID
  description: Job ID of the logs query.
- contextPath: Panorama.Monitor.Status
  description: Status of the logs query.
  type: string
- contextPath: Panorama.Monitor.Message
  description: Message  of the logs query.
  type: string

tests:
- PAN-OS Query Logs For Indicators Test