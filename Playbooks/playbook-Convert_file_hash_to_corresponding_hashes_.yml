id: Convert file hash to corresponding hashes
version: -1
name: Convert file hash to corresponding hashes
fromversion: 4.5.0
description: |
  The playbook allows to get all of the relevant file hash even if there is only one hash type available
  For example if we have only the SHA256 hash the playbook will get the SHA1 and MD5 hashes.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: d454b23d-bf15-4908-8ee4-6c607666e3b5
    type: start
    task:
      id: d454b23d-bf15-4908-8ee4-6c607666e3b5
      description: Start
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "35"
      - "36"
      - "37"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 520,
          "y": -100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "2":
    id: "2"
    taskid: 991a7e8a-1cf0-4c21-8084-06e7c2f29309
    type: title
    task:
      description: Done
      id: 991a7e8a-1cf0-4c21-8084-06e7c2f29309
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 520,
          "y": 970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: dd11c15c-962d-4ed2-89bd-2be155160d3a
    type: condition
    task:
      id: dd11c15c-962d-4ed2-89bd-2be155160d3a
      description: Does SHA256 exist?
      version: -1
      name: Does SHA256 exist?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "34"
      "yes":
      - "18"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1540,
          "y": 230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: 8aa3f46d-9fe0-439a-868e-1d37f94e9150
    type: condition
    task:
      id: 8aa3f46d-9fe0-439a-868e-1d37f94e9150
      description: Does MD5 exist?
      version: -1
      name: Does MD5 exist?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "32"
      "yes":
      - "16"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.MD5
            iscontext: true
    view: |-
      {
        "position": {
          "x": -870,
          "y": 230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "10":
    id: "10"
    taskid: 3b85afdc-140b-46dd-88ee-9e1b19127b09
    type: condition
    task:
      id: 3b85afdc-140b-46dd-88ee-9e1b19127b09
      description: Does SHA1 exist?
      version: -1
      name: Does SHA1 exist?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "15"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SHA1
            iscontext: true
    view: |-
      {
        "position": {
          "x": 520,
          "y": 230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "15":
    id: "15"
    taskid: 932b767f-e0e1-41ce-8c7a-ba0c99dd284d
    type: regular
    task:
      id: 932b767f-e0e1-41ce-8c7a-ba0c99dd284d
      version: -1
      name: Get hashes by SHA1
      description: Accepts the SHA1 to check.
      script: '|||file'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "25"
      - "26"
      - "24"
    scriptarguments:
      confidenceThreshold: {}
      file:
        complex:
          root: inputs.SHA1
      include_inactive: {}
      long: {}
      md5: {}
      owners: {}
      ratingThreshold: {}
      retries: {}
      sha256: {}
      threshold: {}
      wait: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 300,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "16":
    id: "16"
    taskid: 41efbe36-3c18-42c4-87e6-31053a113cb8
    type: regular
    task:
      id: 41efbe36-3c18-42c4-87e6-31053a113cb8
      version: -1
      name: Get hashes by MD5
      description: Accepts the MD5 to check.
      script: '|||file'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "30"
      - "31"
      - "33"
    scriptarguments:
      confidenceThreshold: {}
      file:
        complex:
          root: inputs.MD5
      include_inactive: {}
      long: {}
      md5: {}
      owners: {}
      ratingThreshold: {}
      retries: {}
      sha256: {}
      threshold: {}
      wait: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1120,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "18":
    id: "18"
    taskid: 8bb54d60-e967-41f5-8df6-921d5328374e
    type: regular
    task:
      id: 8bb54d60-e967-41f5-8df6-921d5328374e
      version: -1
      name: Get Hashes by SHA256
      description: Accepts the SHA256 to check.
      script: '|||file'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "27"
      - "28"
      - "29"
    scriptarguments:
      confidenceThreshold: {}
      file:
        complex:
          root: inputs.SHA256
      include_inactive: {}
      long: {}
      md5: {}
      owners: {}
      ratingThreshold: {}
      retries: {}
      sha256: {}
      threshold: {}
      wait: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1330,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "24":
    id: "24"
    taskid: 22b64069-8374-4822-82c5-b22f5efc9ad9
    type: regular
    task:
      id: 22b64069-8374-4822-82c5-b22f5efc9ad9
      version: -1
      name: Set MD5
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: File.MD5
      value:
        complex:
          root: inputs.MD5
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 742.5,
          "y": 650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "25":
    id: "25"
    taskid: a11f996e-62b5-4b65-8a6c-a271ace08150
    type: regular
    task:
      id: a11f996e-62b5-4b65-8a6c-a271ace08150
      version: -1
      name: Set SHA1
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: FIle.SHA1
      value:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -110,
          "y": 650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "26":
    id: "26"
    taskid: e182fcaa-4756-498e-8a4d-cc8134070f23
    type: regular
    task:
      id: e182fcaa-4756-498e-8a4d-cc8134070f23
      version: -1
      name: Set SHA256
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: File.SHA256
      value:
        complex:
          root: inputs.SHA256
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 300,
          "y": 650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "27":
    id: "27"
    taskid: 543bd903-62ae-425c-8a02-0436659b9770
    type: regular
    task:
      id: 543bd903-62ae-425c-8a02-0436659b9770
      version: -1
      name: Set SHA1
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: FIle.SHA1
      value:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1330,
          "y": 660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "28":
    id: "28"
    taskid: a6de4be0-4473-4a74-88ef-64017ed000d5
    type: regular
    task:
      id: a6de4be0-4473-4a74-88ef-64017ed000d5
      version: -1
      name: Set SHA256
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: File.SHA256
      value:
        complex:
          root: inputs.SHA256
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1750,
          "y": 660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "29":
    id: "29"
    taskid: 2ec1c704-3daa-4db9-8d72-6e2a0054d66f
    type: regular
    task:
      id: 2ec1c704-3daa-4db9-8d72-6e2a0054d66f
      version: -1
      name: Set MD5
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: File.MD5
      value:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "30":
    id: "30"
    taskid: a756cdfa-7fea-4cea-8a99-d01ae7c10d8c
    type: regular
    task:
      id: a756cdfa-7fea-4cea-8a99-d01ae7c10d8c
      version: -1
      name: Set SHA1
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: FIle.SHA1
      value:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1540,
          "y": 650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "31":
    id: "31"
    taskid: 9bc359a5-220c-4db6-89ba-275418a3bd7c
    type: regular
    task:
      id: 9bc359a5-220c-4db6-89ba-275418a3bd7c
      version: -1
      name: Set SHA256
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: File.SHA256
      value:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1120,
          "y": 650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "32":
    id: "32"
    taskid: e61ed1b2-6f3e-47f3-8f92-52cf0c9304d4
    type: title
    task:
      id: e61ed1b2-6f3e-47f3-8f92-52cf0c9304d4
      description: Done
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -870,
          "y": 970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "33":
    id: "33"
    taskid: 6e0cf800-4785-4e34-86d1-096b6d854d11
    type: regular
    task:
      id: 6e0cf800-4785-4e34-86d1-096b6d854d11
      version: -1
      name: Set MD5
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: File.MD5
      value:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -640,
          "y": 650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "34":
    id: "34"
    taskid: 81bd58c9-aef3-4e18-8c4a-5faec4ddd875
    type: title
    task:
      id: 81bd58c9-aef3-4e18-8c4a-5faec4ddd875
      description: Done
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1540,
          "y": 960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "35":
    id: "35"
    taskid: 5d2b34a8-b9d1-4710-843d-b4765d4e20e2
    type: title
    task:
      id: 5d2b34a8-b9d1-4710-843d-b4765d4e20e2
      description: MD5
      version: -1
      name: MD5
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -870,
          "y": 115
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "36":
    id: "36"
    taskid: d658bc79-875f-4eda-8f49-f618d825ef00
    type: title
    task:
      id: d658bc79-875f-4eda-8f49-f618d825ef00
      description: SHA1
      version: -1
      name: SHA1
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 520,
          "y": 115
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "37":
    id: "37"
    taskid: 3ba21cba-aa82-4776-8359-b8e35dc27854
    type: title
    task:
      id: 3ba21cba-aa82-4776-8359-b8e35dc27854
      description: SHA256
      version: -1
      name: SHA256
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1540,
          "y": 100
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {
      "10_15_yes": 0.55,
      "9_16_yes": 0.48
    },
    "paper": {
      "dimensions": {
        "height": 1135,
        "width": 4080,
        "x": -1540,
        "y": -100
      }
    }
  }
inputs:
- key: SHA256
  value:
    complex:
      root: File
      accessor: SHA256
  required: false
  description: The inputted SHA256 hash to convert.
- key: SHA1
  value:
    complex:
      root: File
      accessor: SHA1
  required: false
  description: The inputted SHA1 hash to convert.
- key: MD5
  value:
    complex:
      root: File
      accessor: MD5
  required: false
  description: The inputted MD5  hash to convert.
outputs:
- contextPath: File.SHA256
  description: Output for detected SHA256 hash.
  type: string
- contextPath: File.SHA1
  description: Output for detected SHA1 hash.
  type: string
- contextPath: File.MD5
  description: Output for detected MD5 hash.
  type: string
tests:
- Test Convert file hash to corresponding hashes
