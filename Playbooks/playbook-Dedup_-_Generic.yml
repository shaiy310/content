id: dedup_-_generic
version: -1
name: Dedup - Generic
fromversion: "4.0.0"
description: Generic playbook to find duplicate incidents with one of the methods
  we have.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 4bb4cba3-1da4-4356-831e-87ca6523087a
    type: start
    task:
      id: 4bb4cba3-1da4-4356-831e-87ca6523087a
      version: -1
      description: ""
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "1":
    id: "1"
    taskid: 48f0cedf-fad2-47db-81fd-348b062f41fe
    type: condition
    task:
      id: 48f0cedf-fad2-47db-81fd-348b062f41fe
      version: -1
      name: Choose find duplicates method
      description: |-
        We have a few methods to find duplicates incidents in Demisto.
        - ml: machine learning model, trained mostly on phishing incidents.
        -rules: help to find duplicate incidents when the logic in defined well - like same label or custom fields.
        -text: statistics algorithm comparing text. usually useful for  phishing.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      ml:
      - "7"
      rules:
      - "6"
      text:
      - "4"
    separatecontext: false
    conditions:
    - label: ml
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.DuplicateMethod
            iscontext: true
          right:
            value:
              simple: ml
    - label: rules
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.DuplicateMethod
            iscontext: true
          right:
            value:
              simple: rules
    - label: text
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: inputs.DuplicateMethod
            iscontext: true
          right:
            value:
              simple: text
    view: |-
      {
        "position": {
          "x": 480,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "4":
    id: "4"
    taskid: e533da63-e23f-43b2-8b12-e709e62401c0
    type: regular
    task:
      id: e533da63-e23f-43b2-8b12-e709e62401c0
      version: -1
      description: ""
      name: Find duplicates by text
      scriptName: FindSimilarIncidentsByText
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      ignoreClosedIncidents:
        simple: ${inputs.IgnoreCloseIncidents}
      maxResults: {}
      maximumNumberOfIncidents:
        simple: ${inputs.MaxNumberOfCandidates}
      minTextLength: {}
      textFields:
        simple: name,details
      threshold:
        simple: ${inputs.DuplicateThreshold}
      timeField:
        simple: ${inputs.Time field}
      timeFrameHours:
        simple: ${inputs.TimeFrameHours}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "5":
    id: "5"
    taskid: 54a58f44-4f47-452c-8a4a-c7f64d5c499a
    type: condition
    task:
      id: 54a58f44-4f47-452c-8a4a-c7f64d5c499a
      version: -1
      name: Is duplicate found
      description: Check if any duplicate incident has been found.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "9"
      "yes":
      - "8"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isTrue
          left:
            value:
              simple: isSimilarIncidentFound
            iscontext: true
      - - operator: isTrue
          left:
            value:
              simple: inputs.CloseAsDuplicate
            iscontext: true
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "6":
    id: "6"
    taskid: bcc06547-4ca6-4ef4-8f3d-71c170f48218
    type: regular
    task:
      id: bcc06547-4ca6-4ef4-8f3d-71c170f48218
      version: -1
      description: ""
      name: Find similar incidents by rules
      scriptName: FindSimilarIncidents
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      filterQuery: {}
      hoursBack:
        simple: ${inputs.TimeFrameHours}
      ignoreClosedIncidents:
        simple: ${inputs.IgnoreCloseIncidents}
      incidentFieldsAppliedCondition: {}
      maxNumberOfIncidents:
        simple: ${inputs.MaxNumberOfCandidates}
      maxResults: {}
      similarContextKeys: {}
      similarCustomFields: {}
      similarIncidentFields:
        simple: type
      similarIncidentKeys: {}
      similarLabelsKeys:
        simple: Email/subject:*,Email/from
      skipMissingValues: {}
      timeField:
        simple: ${inputs.Time field}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "7":
    id: "7"
    taskid: 8148ea43-d8fd-44ea-8390-1d9661014141
    type: regular
    task:
      id: 8148ea43-d8fd-44ea-8390-1d9661014141
      version: -1
      description: ""
      name: Find duplicates by ml
      scriptName: GetDuplicatesMlv2
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      UseLocalEnvDuplicatesInLastDays: {}
      compareEmailLabels: {}
      compareIncidentTimeDiff: {}
      compareIndicators: {}
      compareOtherLabels: {}
      ignoreClosedIncidents:
        simple: ${inputs.IgnoreCloseIncidents}
      ipComparisonSubnetMask: {}
      maxCandidates: {}
      maxNumberOfIncidents:
        simple: ${inputs.MaxNumberOfCandidates}
      maxResults: {}
      threshold:
        simple: ${inputs.DuplicateThreshold}
      timeField:
        simple: ${inputs.Time field}
      timeFrameHours:
        simple: ${inputs.TimeFrameHours}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 910,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "8":
    id: "8"
    taskid: 857267ed-a8bf-4d65-8a80-967656990b57
    type: regular
    task:
      id: 857267ed-a8bf-4d65-8a80-967656990b57
      version: -1
      name: Close investigation as duplicate
      description: Close the investigation as duplicate to one of the incidents that
        has been found.
      scriptName: CloseInvestigationAsDuplicate
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      duplicateId:
        simple: ${similarIncident.rawId}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 190,
          "y": 750
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  "9":
    id: "9"
    taskid: c1f06a79-d539-4853-8140-f1f879a8f137
    type: title
    task:
      id: c1f06a79-d539-4853-8140-f1f879a8f137
      version: -1
      description: ""
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 490,
          "y": 1000
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1015,
        "width": 1240,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: DuplicateMethod
  value:
    simple: ml
  required: true
  description: 'Choose one of duplicate method: rules, ml, text'
- key: DuplicateThreshold
  value:
    simple: "0.75"
  required: true
  description: Threshold to consider incident as duplicate. Use in text similarity
    method and ML method
- key: TimeFrameHours
  value:
    simple: "72"
  required: true
  description: Check duplicate candidates in this time frame (hours)
- key: IgnoreCloseIncidents
  value:
    simple: "yes"
  required: true
  description: Choose if to ignore closed incidents (yes\no)
- key: MaxNumberOfCandidates
  value:
    simple: "1000"
  required: false
  description: Maximum number of candidates to check for duplication
- key: CloseAsDuplicate
  value:
    simple: "true"
  required: false
  description: If duplicate found - close the incident as duplicate (true\false)
- key: Time field
  value:
    simple: created
  required: false
  description: 'Time field to consider while query past incidents as duplicate candidates.
    Values: created, occurred, modified'
outputs:
- contextPath: isSimilarIncidentFound
  description: Is similar incident found? (true\false)
  type: boolean
- contextPath: similarIncident
  description: Similar incident.
  type: unknown
tests:
  - dedup_-_generic_-_test