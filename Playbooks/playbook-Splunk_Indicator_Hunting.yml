id: Splunk Indicator Hunting
version: -1
fromversion: 5.0.0
name: Splunk Indicator Hunting
description: The Playbook queries Splunk  for indicators such as file hashes, IP addresses,
  domains or urls. and outputs detected users, ip addresses and hostnames related
  to the indicators.
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: 6457aa78-5641-44d8-8ad0-18a611975bd1
    type: start
    task:
      id: 6457aa78-5641-44d8-8ad0-18a611975bd1
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '54'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": -280
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '2':
    id: '2'
    taskid: 7e2fe0d4-10da-4ae0-876f-0d94cd2d6d4a
    type: title
    task:
      id: 7e2fe0d4-10da-4ae0-876f-0d94cd2d6d4a
      version: -1
      name: Hash Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '8'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -660,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '5':
    id: '5'
    taskid: f2af2045-67c2-47f1-8e22-3b00a6beaa44
    type: title
    task:
      id: f2af2045-67c2-47f1-8e22-3b00a6beaa44
      version: -1
      name: IP Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '7'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 990,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '6':
    id: '6'
    taskid: 4313ee1b-e453-49d1-8644-267b2e0dff6c
    type: title
    task:
      id: 4313ee1b-e453-49d1-8644-267b2e0dff6c
      version: -1
      name: Domain/Url Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '9'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2070,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '7':
    id: '7'
    taskid: 70780084-0b31-4b12-866f-125352d4ddf2
    type: condition
    task:
      id: 70780084-0b31-4b12-866f-125352d4ddf2
      version: -1
      description: ''
      name: Is there an IP to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '50'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.IPAddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": 990,
          "y": 420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '8':
    id: '8'
    taskid: 45687543-bac0-47cd-858d-19e2268ed132
    type: condition
    task:
      id: 45687543-bac0-47cd-858d-19e2268ed132
      version: -1
      description: ''
      name: Is there a hash to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '26'
      - '27'
      - '38'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -660,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '9':
    id: '9'
    taskid: 0c440cf7-d657-4778-830b-6a85b01e8370
    type: condition
    task:
      id: 0c440cf7-d657-4778-830b-6a85b01e8370
      version: -1
      description: ''
      name: Is there an Domain/Url to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '10'
      'yes':
      - '11'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomain
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2070,
          "y": 420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '10':
    id: '10'
    taskid: 55831a03-03c8-4234-87e2-ba3e15124f7e
    type: title
    task:
      id: 55831a03-03c8-4234-87e2-ba3e15124f7e
      version: -1
      name: Domain/Url hunting done
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '116'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2070,
          "y": 2570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '11':
    id: '11'
    taskid: ea5cc6c2-a8fc-423d-8f79-fa0c335e207e
    type: condition
    task:
      id: ea5cc6c2-a8fc-423d-8f79-fa0c335e207e
      version: -1
      description: ''
      name: Was there a custom domain/url field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '89'
      'yes':
      - '90'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomainField
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2490,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '20':
    id: '20'
    taskid: e4917145-e635-45b2-8637-eab516179d3e
    type: regular
    task:
      id: e4917145-e635-45b2-8637-eab516179d3e
      version: -1
      name: Set MD5 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '69'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.MD5
      value:
        complex:
          root: inputs.MD5
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2590,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '21':
    id: '21'
    taskid: 8d394926-0f4e-4d5d-8d0c-7f31d935a6c3
    type: condition
    task:
      id: 8d394926-0f4e-4d5d-8d0c-7f31d935a6c3
      version: -1
      description: ''
      name: Was there a custom MD5 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '82'
      'yes':
      - '81'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SplunkMD5Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -2390,
          "y": 1140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '22':
    id: '22'
    taskid: a9d31dda-dd5a-49ad-8a4e-f9b118462a46
    type: condition
    task:
      id: a9d31dda-dd5a-49ad-8a4e-f9b118462a46
      version: -1
      description: ''
      name: Is there an MD5 to search
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '21'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1900,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '25':
    id: '25'
    taskid: 89114e4b-5f78-4764-8f08-1b183a2ad647
    type: title
    task:
      id: 89114e4b-5f78-4764-8f08-1b183a2ad647
      version: -1
      name: Hash hunting done
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '116'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -660,
          "y": 2570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '26':
    id: '26'
    taskid: 1c2153e0-2bc6-49a2-8f45-ba28d73448c9
    type: title
    task:
      id: 1c2153e0-2bc6-49a2-8f45-ba28d73448c9
      version: -1
      name: MD5 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '22'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1900,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '27':
    id: '27'
    taskid: 0250c0d6-4e4e-4117-8549-1bd58942ed23
    type: title
    task:
      id: 0250c0d6-4e4e-4117-8549-1bd58942ed23
      version: -1
      name: SHA1 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '29'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1500,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '29':
    id: '29'
    taskid: 219caccb-356b-4f28-8598-3a2b208c75c1
    type: condition
    task:
      id: 219caccb-356b-4f28-8598-3a2b208c75c1
      version: -1
      description: ''
      name: Is there an SHA1 to search
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '31'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1500,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '31':
    id: '31'
    taskid: 15b68e09-d066-4d44-8ff4-8e3f9e91f215
    type: condition
    task:
      id: 15b68e09-d066-4d44-8ff4-8e3f9e91f215
      version: -1
      description: ''
      name: Was there a custom SHA1 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '84'
      'yes':
      - '83'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SplunkSHA1Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1070,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '38':
    id: '38'
    taskid: 8a45b1af-5241-4850-8b6d-61bcf2762957
    type: title
    task:
      id: 8a45b1af-5241-4850-8b6d-61bcf2762957
      version: -1
      name: SHA256 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '39'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -240,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '39':
    id: '39'
    taskid: 30cf6a20-efcf-48d0-80d5-31523a3e284e
    type: condition
    task:
      id: 30cf6a20-efcf-48d0-80d5-31523a3e284e
      version: -1
      description: ''
      name: Is there an SHA256 to search
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '41'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -240,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '41':
    id: '41'
    taskid: 4619958a-880f-4406-86e8-45a9f7155fb0
    type: condition
    task:
      id: 4619958a-880f-4406-86e8-45a9f7155fb0
      version: -1
      description: ''
      name: Was there a custom SHA256 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '86'
      'yes':
      - '85'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SplunkSHA256Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -240,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '48':
    id: '48'
    taskid: 6a0238aa-af6f-40b2-8ee7-c62eafe818ed
    type: title
    task:
      id: 6a0238aa-af6f-40b2-8ee7-c62eafe818ed
      version: -1
      name: IP hunting done
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '116'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 2570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '50':
    id: '50'
    taskid: c8f395df-f676-4d66-858d-037fec1bd956
    type: condition
    task:
      id: c8f395df-f676-4d66-858d-037fec1bd956
      version: -1
      description: ''
      name: Was there a custom IP field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '88'
      'yes':
      - '87'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.SplunkIPField
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1380,
          "y": 1130
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '54':
    id: '54'
    taskid: 3a34151e-f6ba-4406-82aa-137d5968b47d
    type: condition
    task:
      id: 3a34151e-f6ba-4406-82aa-137d5968b47d
      version: -1
      description: ''
      name: Is Splunk enabled
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '2'
      - '5'
      - '6'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isExists
          left:
            value:
              simple: modules.brand
            iscontext: true
      - - operator: isEqualString
          left:
            value:
              simple: modules.brand
            iscontext: true
          right:
            value:
              simple: SplunkPy
      - - operator: isEqualString
          left:
            value:
              simple: modules.state
            iscontext: true
          right:
            value:
              simple: active
    view: |-
      {
        "position": {
          "x": 780,
          "y": -140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '57':
    id: '57'
    taskid: 495bfdd5-ab80-45db-8c9f-85378eb36cfc
    type: regular
    task:
      id: 495bfdd5-ab80-45db-8c9f-85378eb36cfc
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '107'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.URLDomainField
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: ' *'
              list2:
                value:
                  simple: inputs.SplunkURLDomainField
                iscontext: true
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: $1*
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2470,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '64':
    id: '64'
    taskid: 639d2c54-566d-47a6-8e87-d728d44b6b01
    type: regular
    task:
      id: 639d2c54-566d-47a6-8e87-d728d44b6b01
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '103'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkIPField
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.IPAddress
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1150,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '69':
    id: '69'
    taskid: fb833c21-b53b-4ce3-8ea4-f1e3fabb627f
    type: regular
    task:
      id: fb833c21-b53b-4ce3-8ea4-f1e3fabb627f
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '91'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ') | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: Index
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2590,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '71':
    id: '71'
    taskid: 898168d2-2593-461e-80a9-cd3626d95f4e
    type: regular
    task:
      id: 898168d2-2593-461e-80a9-cd3626d95f4e
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '95'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1280,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '72':
    id: '72'
    taskid: 4951f992-b5eb-4f5a-8200-26a0f72c367b
    type: regular
    task:
      id: 4951f992-b5eb-4f5a-8200-26a0f72c367b
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '99'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -400,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '74':
    id: '74'
    taskid: e01ebdb8-7e0e-4dcf-83d5-1c4bf81556fb
    type: regular
    task:
      id: e01ebdb8-7e0e-4dcf-83d5-1c4bf81556fb
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '107'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: DomainURL
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: '*$1*'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2920,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '78':
    id: '78'
    taskid: 1b729bc6-9db4-4c63-8153-4c59611d5789
    type: regular
    task:
      id: 1b729bc6-9db4-4c63-8153-4c59611d5789
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '95'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkSHA1Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.SHA1
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -870,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '79':
    id: '79'
    taskid: 38dcbf43-2671-4e89-8082-54fd66440e58
    type: regular
    task:
      id: 38dcbf43-2671-4e89-8082-54fd66440e58
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '99'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkSHA256Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.SHA256
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 10,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '80':
    id: '80'
    taskid: 5a7819d1-808e-4ffd-8d94-3d35eac5aedc
    type: regular
    task:
      id: 5a7819d1-808e-4ffd-8d94-3d35eac5aedc
      version: -1
      name: Splunk search without custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '103'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1570,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '81':
    id: '81'
    taskid: b4998eca-5617-4a69-8d9f-6fde3e67e1a8
    type: title
    task:
      id: b4998eca-5617-4a69-8d9f-6fde3e67e1a8
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '122'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2190,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '82':
    id: '82'
    taskid: 544cebf0-17ea-436d-8af1-17013ec9bb75
    type: title
    task:
      id: 544cebf0-17ea-436d-8af1-17013ec9bb75
      version: -1
      name: Splunk free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '20'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2590,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '83':
    id: '83'
    taskid: 3071057a-075c-4cc3-8d9a-4d89662a6fe9
    type: title
    task:
      id: 3071057a-075c-4cc3-8d9a-4d89662a6fe9
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '78'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -870,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '84':
    id: '84'
    taskid: 28407ef8-72d6-4667-8d9e-7fb1f3255cd9
    type: title
    task:
      id: 28407ef8-72d6-4667-8d9e-7fb1f3255cd9
      version: -1
      name: Splunk free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '112'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1280,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '85':
    id: '85'
    taskid: 4096da5f-fdda-4dce-8ccf-65cacc168a7d
    type: title
    task:
      id: 4096da5f-fdda-4dce-8ccf-65cacc168a7d
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '79'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 10,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '86':
    id: '86'
    taskid: bdc4f04c-99d6-49ff-8cc5-c56a9461bbd1
    type: title
    task:
      id: bdc4f04c-99d6-49ff-8cc5-c56a9461bbd1
      version: -1
      name: Splunk free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '113'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -400,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '87':
    id: '87'
    taskid: 20f2a299-2d3d-4cef-89b9-f8128c24c9c9
    type: title
    task:
      id: 20f2a299-2d3d-4cef-89b9-f8128c24c9c9
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '64'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1150,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '88':
    id: '88'
    taskid: 084034f7-7f62-4e40-838f-e0b04b2ce0bd
    type: title
    task:
      id: 084034f7-7f62-4e40-838f-e0b04b2ce0bd
      version: -1
      name: Splunk free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '114'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1570,
          "y": 1330
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '89':
    id: '89'
    taskid: 1e86e491-b889-48dc-8fe0-a5a2a22a8069
    type: title
    task:
      id: 1e86e491-b889-48dc-8fe0-a5a2a22a8069
      version: -1
      name: Splunk free text query
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '115'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2920,
          "y": 1340
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '90':
    id: '90'
    taskid: df5ab634-da64-450b-80e9-3ad8f6fd93fe
    type: title
    task:
      id: df5ab634-da64-450b-80e9-3ad8f6fd93fe
      version: -1
      name: Splunk query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '57'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2470,
          "y": 1340
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '91':
    id: '91'
    taskid: 8d981267-254f-4feb-8267-8ad20a93a8e9
    type: condition
    task:
      id: 8d981267-254f-4feb-8267-8ad20a93a8e9
      version: -1
      description: ''
      name: Is MD5 file hash detected by Splunk?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '92'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": -2390,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '92':
    id: '92'
    taskid: 94b84a05-2fa4-4ff1-8fcc-f636d6abd6f3
    type: regular
    task:
      id: 94b84a05-2fa4-4ff1-8fcc-f636d6abd6f3
      version: -1
      name: Set detected IP addresses
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '93'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedIPs
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2630,
          "y": 2065
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '93':
    id: '93'
    taskid: 6eda5e85-d4bc-4823-875e-9970bac10e5e
    type: regular
    task:
      id: 6eda5e85-d4bc-4823-875e-9970bac10e5e
      version: -1
      name: Set detected usernames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '94'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedUsers
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2630,
          "y": 2215
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '94':
    id: '94'
    taskid: 336ec037-669b-4eeb-8bb9-b26c787ded68
    type: regular
    task:
      id: 336ec037-669b-4eeb-8bb9-b26c787ded68
      version: -1
      name: Set detected internal hostnames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedHosts
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2630,
          "y": 2365
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '95':
    id: '95'
    taskid: 92ef76c6-1a0b-439b-8819-35b0c062c6c4
    type: condition
    task:
      id: 92ef76c6-1a0b-439b-8819-35b0c062c6c4
      version: -1
      description: ''
      name: Is SHA1 file hash detected by Splunk?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '96'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1040,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '96':
    id: '96'
    taskid: b97817c4-b589-428f-8138-44ceaa186b24
    type: regular
    task:
      id: b97817c4-b589-428f-8138-44ceaa186b24
      version: -1
      name: Set detected IP addresses
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '97'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedIPs
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1240,
          "y": 2065
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '97':
    id: '97'
    taskid: 7dbd17dc-dbef-4226-88a6-a97686ba8704
    type: regular
    task:
      id: 7dbd17dc-dbef-4226-88a6-a97686ba8704
      version: -1
      name: Set detected usernames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '98'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedUsers
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1240,
          "y": 2215
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '98':
    id: '98'
    taskid: 38c75384-c2ea-4ca9-8ba1-7fd406f58c02
    type: regular
    task:
      id: 38c75384-c2ea-4ca9-8ba1-7fd406f58c02
      version: -1
      name: Set internal detected hostnames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedHosts
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1240,
          "y": 2365
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '99':
    id: '99'
    taskid: 8669c6d1-b8cf-4b20-8360-08f82c40e17c
    type: condition
    task:
      id: 8669c6d1-b8cf-4b20-8360-08f82c40e17c
      version: -1
      description: ''
      name: Is SHA256 file hash detected by Splunk?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '100'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": -250,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '100':
    id: '100'
    taskid: a221d901-f40f-402a-87b6-e1df22ee8f9d
    type: regular
    task:
      id: a221d901-f40f-402a-87b6-e1df22ee8f9d
      version: -1
      name: Set detected IP addresses
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '101'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedIPs
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -70,
          "y": 2065
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '101':
    id: '101'
    taskid: a7f7303d-aeed-4852-8f05-f9a403457a7a
    type: regular
    task:
      id: a7f7303d-aeed-4852-8f05-f9a403457a7a
      version: -1
      name: Set detected usernames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '102'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedUsers
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -70,
          "y": 2215
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '102':
    id: '102'
    taskid: 7f51ee03-b000-48b2-80a4-935d2bf3bd39
    type: regular
    task:
      id: 7f51ee03-b000-48b2-80a4-935d2bf3bd39
      version: -1
      name: Set detected internal hostnames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedHosts
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -70,
          "y": 2365
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '103':
    id: '103'
    taskid: 71e0cc33-a934-44a2-825b-c946df97daf8
    type: condition
    task:
      id: 71e0cc33-a934-44a2-825b-c946df97daf8
      version: -1
      description: ''
      name: Is ip detected by Splunk?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '104'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1300,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '104':
    id: '104'
    taskid: 4b14e9bc-81ca-4c92-80a7-2b910ed21980
    type: regular
    task:
      id: 4b14e9bc-81ca-4c92-80a7-2b910ed21980
      version: -1
      name: Set detected IP addresses
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '105'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedIPs
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1470,
          "y": 2065
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '105':
    id: '105'
    taskid: 7fc7ed62-428a-474f-8a49-10b1e4b0b08e
    type: regular
    task:
      id: 7fc7ed62-428a-474f-8a49-10b1e4b0b08e
      version: -1
      name: Set detected usernames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '106'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedUsers
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1470,
          "y": 2215
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '106':
    id: '106'
    taskid: ef498832-a6dc-406b-8a50-19fb2ae44a0d
    type: regular
    task:
      id: ef498832-a6dc-406b-8a50-19fb2ae44a0d
      version: -1
      name: Set detected internal hostnames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedHosts
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1470,
          "y": 2365
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '107':
    id: '107'
    taskid: 48e88921-e6e6-4982-84ce-22ef329a6b02
    type: condition
    task:
      id: 48e88921-e6e6-4982-84ce-22ef329a6b02
      version: -1
      description: ''
      name: Is domain or url detected by Splunk?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '10'
      'yes':
      - '108'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2600,
          "y": 1885
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '108':
    id: '108'
    taskid: 2de1cfc9-1da0-47e1-8b53-370bd65f1d49
    type: regular
    task:
      id: 2de1cfc9-1da0-47e1-8b53-370bd65f1d49
      version: -1
      name: Set detected IP addresses
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '109'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedIPs
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 2065
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '109':
    id: '109'
    taskid: dfbde74c-b316-4bde-80a5-0b4e41bbd93f
    type: regular
    task:
      id: dfbde74c-b316-4bde-80a5-0b4e41bbd93f
      version: -1
      name: Set detected usernames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '110'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedUsers
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 2225
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '110':
    id: '110'
    taskid: 94a5f71b-4ae1-463a-859f-cf60fe6a3f26
    type: regular
    task:
      id: 94a5f71b-4ae1-463a-859f-cf60fe6a3f26
      version: -1
      name: Set detected internal hostnames
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '10'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedHosts
      stringify: {}
      value:
        complex:
          root: ${
          accessor: =[]}
          transformers:
          - operator: GetValuesOfMultipleFields
            args:
              Key:
                value:
                  simple: Splunk.Result
                iscontext: true
              List:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 2375
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '112':
    id: '112'
    taskid: b6ce6e08-69ea-4517-8ac1-da4eb3487294
    type: regular
    task:
      id: b6ce6e08-69ea-4517-8ac1-da4eb3487294
      version: -1
      name: Set SHA1 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '71'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA1
      value:
        complex:
          root: inputs.SHA1
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1280,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '113':
    id: '113'
    taskid: 548fe013-8333-45de-80db-e415d70b6e16
    type: regular
    task:
      id: 548fe013-8333-45de-80db-e415d70b6e16
      version: -1
      name: Set SHA256 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '72'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA256
      stringify: {}
      value:
        complex:
          root: inputs.SHA256
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -400,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '114':
    id: '114'
    taskid: 53d80aaa-cbac-4944-8949-7286084013b5
    type: regular
    task:
      id: 53d80aaa-cbac-4944-8949-7286084013b5
      version: -1
      name: Set IP to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '80'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: IP
      stringify: {}
      value:
        complex:
          root: inputs.IPAddress
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1570,
          "y": 1520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '115':
    id: '115'
    taskid: cbdaeae0-6502-4e16-8aa7-3bfdbaa87597
    type: regular
    task:
      id: cbdaeae0-6502-4e16-8aa7-3bfdbaa87597
      version: -1
      name: Set DomainUrl to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '74'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: DomainURL
      value:
        complex:
          root: inputs.URLDomain
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2920,
          "y": 1500
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '116':
    id: '116'
    taskid: 4cbc556a-ce98-4838-8deb-baf463ee4b5f
    type: title
    task:
      id: 4cbc556a-ce98-4838-8deb-baf463ee4b5f
      version: -1
      name: Sort internal and external IP addresses
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '117'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 2810
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '117':
    id: '117'
    taskid: c307d82f-5918-4a15-8a01-8e9f56ad6ec6
    type: condition
    task:
      id: c307d82f-5918-4a15-8a01-8e9f56ad6ec6
      version: -1
      description: ''
      name: Are there detected IP addresses?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '121'
      'yes':
      - '118'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Splunk.DetectedIPs
            iscontext: true
    view: |-
      {
        "position": {
          "x": 780,
          "y": 2990
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '118':
    id: '118'
    taskid: 4e2ab47f-d7b4-486a-8de1-323b8afa43f3
    type: regular
    task:
      id: 4e2ab47f-d7b4-486a-8de1-323b8afa43f3
      version: -1
      name: Determine whether the IP address is internal or external
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      scriptName: IsIPInRanges
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '119'
    scriptarguments:
      ip:
        simple: ${Splunk.DetectedIPs}
      ipRanges:
        simple: ${inputs.InternalRange}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1050,
          "y": 3170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '119':
    id: '119'
    taskid: 66c11991-c44b-407c-86b5-bf0f88ad385b
    type: regular
    task:
      id: 66c11991-c44b-407c-86b5-bf0f88ad385b
      version: -1
      name: Set detected IP addresses as internal
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '120'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedInternalIPs
      stringify: {}
      value:
        complex:
          root: IP
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: IP.InRange
                iscontext: true
              right:
                value:
                  simple: 'yes'
          accessor: Address
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1050,
          "y": 3350
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '120':
    id: '120'
    taskid: ab721c94-cabf-4c81-8d4d-53c1b0aa9a52
    type: regular
    task:
      id: ab721c94-cabf-4c81-8d4d-53c1b0aa9a52
      version: -1
      name: Set detected IP addresses as external
      description: Checks if the specified value exists in context. If the value exists,
        it will be set in context, otherwise no value will be set it context.
      scriptName: SetAndHandleEmpty
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '121'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: Splunk.DetectedExternalIPs
      stringify: {}
      value:
        complex:
          root: IP
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: IP.InRange
                iscontext: true
              right:
                value:
                  simple: 'no'
          accessor: Address
          transformers:
          - operator: uniq
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1050,
          "y": 3530
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '121':
    id: '121'
    taskid: cfb4fa28-3bee-4479-884c-c217b3fed88d
    type: title
    task:
      id: cfb4fa28-3bee-4479-884c-c217b3fed88d
      version: -1
      name: Done sorting IP addresses
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 780,
          "y": 3700
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '122':
    id: '122'
    taskid: 07cbfcea-1459-43af-88c0-1b80d3af4f9c
    type: regular
    task:
      id: 07cbfcea-1459-43af-88c0-1b80d3af4f9c
      version: -1
      name: Splunk search with custom fields
      description: Searches Splunk for events.
      script: '|||splunk-search'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '91'
    scriptarguments:
      batch_limit: {}
      earliest_time:
        simple: ${inputs.earliest_time}
      event_limit:
        simple: ${inputs.event_limit}
      latest_time:
        simple: ${inputs.latest_time}
      query:
        complex:
          root: inputs.SplunkMD5Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.MD5
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ')  | table '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationIPFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationUserFields
                iscontext: true
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.InvestigationInternalHostFields
                iscontext: true
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' ('
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.IndexName
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: index=
              suffix: {}
      update_context: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2190,
          "y": 1710
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 4045,
        "width": 5930,
        "x": -2630,
        "y": -280
      }
    }
  }
inputs:
- key: MD5
  value: {}
  required: false
  description: MD5 hash file or an array of hashes to search.
- key: SplunkMD5Field
  value: {}
  required: false
  description: MD5 field to search in Splunk. If non are specified the search will
    use quick filter.
- key: SHA1
  value: {}
  required: false
  description: SHA1 hash file or an array of hashes to search.
- key: SplunkSHA1Field
  value: {}
  required: false
  description: SHA1 field to search in Splunk. If non are specified the search will
    use quick filter.
- key: SHA256
  value: {}
  required: false
  description: SHA256 hash file or an array of hashes to search.
- key: SplunkSHA256Field
  value: {}
  required: false
  description: SHA256 field to search in Splunk. If non are specified the search will
    use quick filter.
- key: IPAddress
  value: {}
  required: false
  description: |
    Source or destination IP to search. Can be a single address or an array of addresses.
- key: SplunkIPField
  value: {}
  required: false
  description: IP field to search in Splunk. If non are specified the search will
    use sourceip or destinationip (combined).
- key: URLDomain
  value: {}
  required: false
  description: |
    Domain or Url can be single or an array of domain/urls to search. By default the LIKE clause is used.
- key: SplunkURLDomainField
  value: {}
  required: false
  description: URL/Domain field to search in Splunk. If non are specified the search
    will use quick filter. Only one field can be used in this parameter.
- key: earliest_time
  value:
    simple: -1d
  required: false
  description: |-
    Earliest time to search.
    Examples:
    -7d
    -24h

    More examples
    https://docs.splunk.com/Documentation/Splunk/8.0.0/Search/Specifytimemodifiersinyoursearch


    For more examples view
    https://docs.splunk.com/Documentation/Splunk/8.0.0/SearchReference/SearchTimeModifiers

    Its recommended to set a limit for the time frame.
- key: latest_time
  value: {}
  required: false
  description: |-
    Latest time to search.
    Examples:
    -6d
    -23h

    More examples
    https://docs.splunk.com/Documentation/Splunk/8.0.0/Search/Specifytimemodifiersinyoursearch


    For more examples view
    https://docs.splunk.com/Documentation/Splunk/8.0.0/SearchReference/SearchTimeModifiers

    Its recommended to set a limit for the time frame.
- key: event_limit
  value:
    simple: '100'
  required: true
  description: Limit number of events returned by query. This argument is not mandatory
    for the command but is needed for the playbook.
- key: InvestigationIPFields
  value:
    simple: dest_ip,src_ip,src,dst
  required: true
  description: The values of these Splunk fields will be used for the playbook IP
    outputs.
- key: InvestigationUserFields
  value:
    simple: user_identity
  required: true
  description: The values of these Splunk fields will be used for the playbook user
    outputs.
- key: InvestigationInternalHostFields
  value:
    simple: dest_nt_host
  required: true
  description: The values of these Splunk fields will be used for the playbook host
    name outputs.
- key: InternalRange
  value: {}
  required: false
  description: 'A list of internal IP ranges to check IP addresses against. The list
    should be provided in CIDR notation, separated by commas. An example of a list
    of ranges would be: "172.16.0.0/12,10.0.0.0/8,192.168.0.0/16" (without quotes).
    If a list is not provided, will use default list provided in the IsIPInRanges
    script (the known IPv4 private address ranges).'
- key: IndexName
  value:
    simple: '*'
  required: false
  description: A single Spunk index to use in the search.
- key: SelectFields
  value: {}
  required: false
  description: These fields can be used to further enrich the Splunk results.
    Use comma delimited field names as they appear in Splunk. * is an acceptable
    value but not recommended as it creates a very large output.
    These fields are in addition to the investigation fields so
    no need to provide the same fields as in the investigation fields listing.
outputs:
- contextPath: Splunk.DetectedUsers
  description: Users detected based on the username field in your search.
  type: string
- contextPath: Splunk.DetectedInternalIPs
  description: Internal IP addresses detected by your search.
  type: string
- contextPath: Splunk.DetectedExternalIPs
  description: External IP addresses detected by your search.
  type: string
- contextPath: Splunk.Detected InternalHosts
  description: Internal host names detected based on the fields in your search.
  type: string
- contextPath: Splunk.DetectedExternalHosts
  description: External host names detected based on the fields in your search.
  type: string
tests:
- Splunk Indicator Hunting Test