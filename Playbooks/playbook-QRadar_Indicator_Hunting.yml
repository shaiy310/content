id: QRadar Indicator Hunting
version: -1
name: QRadar Indicator Hunting
description: 'The Playbook queries QRadar SIEM for indicators such as file hashes,
  IP addresses, Domains or urls. '
fromversion: 4.5.0
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: aea9933a-c16a-4dba-89d9-c7e68765eac7
    type: start
    task:
      id: aea9933a-c16a-4dba-89d9-c7e68765eac7
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '55'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 760,
          "y": -240
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '2':
    id: '2'
    taskid: 5f176ea4-b4e3-4d8e-87f9-fde885ddf3ed
    type: title
    task:
      id: 5f176ea4-b4e3-4d8e-87f9-fde885ddf3ed
      version: -1
      name: Hash Search
      description: ''
      type: title
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '8'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -670,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '3':
    id: '3'
    taskid: 6567c88b-2e0b-46a5-8474-7ab6d3a5a87d
    type: playbook
    task:
      id: 6567c88b-2e0b-46a5-8474-7ab6d3a5a87d
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '10'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.DomainURLFields)
                    ? val.DomainURLFields : [val.DomainURLFields]; var domainurls
                    = Array.isArray(val.DomainURL) ? val.DomainURL : [val.DomainURL];
                    return fields.map(field => domainurls.map(domainurl => field +
                    " ILIKE " + "''%" + domainurl + "%''").join('' OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 2610,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '5':
    id: '5'
    taskid: 8645077c-e7fb-485b-870d-bf7c7a15c9cd
    type: title
    task:
      id: 8645077c-e7fb-485b-870d-bf7c7a15c9cd
      version: -1
      name: IP Search
      description: ''
      type: title
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '7'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 990,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '6':
    id: '6'
    taskid: 700b5562-1050-4ce3-8cf3-60a55dfea1af
    type: title
    task:
      id: 700b5562-1050-4ce3-8cf3-60a55dfea1af
      version: -1
      name: Domain/Url Search
      description: ''
      type: title
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '9'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '7':
    id: '7'
    taskid: d7c2025e-a7e9-4e91-81a5-38cc88b13e96
    type: condition
    task:
      id: d7c2025e-a7e9-4e91-81a5-38cc88b13e96
      version: -1
      name: Is there an IP to search?
      description: Is there an IP to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '49'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.IPAddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": 990,
          "y": 420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '8':
    id: '8'
    taskid: 31ec21bb-4757-4274-8f2b-f826235d69ae
    type: condition
    task:
      id: 31ec21bb-4757-4274-8f2b-f826235d69ae
      version: -1
      name: Is there a hash to search?
      description: Is there a hash to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '26'
      - '27'
      - '38'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -670,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '9':
    id: '9'
    taskid: 25450576-5441-4891-8456-b11d4bfc2f02
    type: condition
    task:
      id: 25450576-5441-4891-8456-b11d4bfc2f02
      version: -1
      name: Is there an Domain/Url to search?
      description: Is there an Domain/Url to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '10'
      'yes':
      - '15'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomain
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '10':
    id: '10'
    taskid: 1b66fcca-dde5-463c-89d4-7249c787236b
    type: title
    task:
      id: 1b66fcca-dde5-463c-89d4-7249c787236b
      version: -1
      name: Done
      description: ''
      type: title
      iscommand: false
      brand: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 2000
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '11':
    id: '11'
    taskid: 0550b2c4-af37-4bfa-896a-2e7c7ca40fc9
    type: condition
    task:
      id: 0550b2c4-af37-4bfa-896a-2e7c7ca40fc9
      version: -1
      name: Was there a custom domain/url field?
      description: Was there a custom domain/url field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '17'
      'yes':
      - '16'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomainField
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '15':
    id: '15'
    taskid: dacf8c53-c9f3-4c45-84c6-4a696f95fbd6
    type: regular
    task:
      id: dacf8c53-c9f3-4c45-84c6-4a696f95fbd6
      version: -1
      name: Set DomainUrl to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '11'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: DomainURL
      value:
        complex:
          root: inputs.URLDomain
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 680
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '16':
    id: '16'
    taskid: a7623446-185a-4bca-8d9b-cd1025fc8335
    type: regular
    task:
      id: a7623446-185a-4bca-8d9b-cd1025fc8335
      version: -1
      name: Set DomainUrlFields to Array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '3'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: DomainURLFields
      value:
        complex:
          root: inputs.URLDomainField
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2610,
          "y": 1300
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '17':
    id: '17'
    taskid: 7d244ffa-43aa-4227-897b-52b07c6d9aad
    type: playbook
    task:
      id: 7d244ffa-43aa-4227-897b-52b07c6d9aad
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '10'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: DomainURL
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: ' ILIKE ''%$1%'''
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' TEXT SEARCH '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 3140,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '20':
    id: '20'
    taskid: 39659131-7ceb-4560-843f-903ffabf552a
    type: regular
    task:
      id: 39659131-7ceb-4560-843f-903ffabf552a
      version: -1
      name: Set MD5 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '21'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.MD5
      value:
        complex:
          root: inputs.MD5
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2340,
          "y": 950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '21':
    id: '21'
    taskid: f41c881f-0205-43a5-80bb-c003d916d84a
    type: condition
    task:
      id: f41c881f-0205-43a5-80bb-c003d916d84a
      version: -1
      name: Was there a custom MD5 field?
      description: Was there a custom MD5 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '23'
      'yes':
      - '36'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.QradarMD5Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -2340,
          "y": 1120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '22':
    id: '22'
    taskid: a28276f3-34db-474a-891f-d116d0437e7b
    type: condition
    task:
      id: a28276f3-34db-474a-891f-d116d0437e7b
      version: -1
      name: Is there an MD5 to search?
      description: Is there an MD5 to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '20'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1930,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '23':
    id: '23'
    taskid: 835b1cc2-e7ed-4c51-8607-cdd1030b8099
    type: playbook
    task:
      id: 835b1cc2-e7ed-4c51-8607-cdd1030b8099
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: = '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' TEXT SEARCH '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -2620,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '25':
    id: '25'
    taskid: c2624684-88ff-472f-8d0f-8a02499f9537
    type: title
    task:
      id: c2624684-88ff-472f-8d0f-8a02499f9537
      version: -1
      name: Done
      description: ''
      type: title
      iscommand: false
      brand: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -670,
          "y": 1980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '26':
    id: '26'
    taskid: 653dee3e-6508-4026-8931-8e72e4d83b29
    type: title
    task:
      id: 653dee3e-6508-4026-8931-8e72e4d83b29
      version: -1
      name: MD5 Search
      description: ''
      type: title
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '22'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1930,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '27':
    id: '27'
    taskid: aa921b17-a73a-4fb4-8386-08ef6c841f07
    type: title
    task:
      id: aa921b17-a73a-4fb4-8386-08ef6c841f07
      version: -1
      name: SHA1 Search
      description: ''
      type: title
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '29'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1520,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '29':
    id: '29'
    taskid: fe49d5d6-b8b9-42a8-831b-2ae938beb69e
    type: condition
    task:
      id: fe49d5d6-b8b9-42a8-831b-2ae938beb69e
      version: -1
      name: Is there an SHA1 to search?
      description: Is there an SHA1 to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '30'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1520,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '30':
    id: '30'
    taskid: 307b8f21-b6d6-4227-8720-d7e3d472cb89
    type: regular
    task:
      id: 307b8f21-b6d6-4227-8720-d7e3d472cb89
      version: -1
      name: Set SHA1 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '31'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA1
      value:
        complex:
          root: inputs.SHA1
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1170,
          "y": 950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '31':
    id: '31'
    taskid: 562e237a-ba90-4acd-866d-7c6c3bb27570
    type: condition
    task:
      id: 562e237a-ba90-4acd-866d-7c6c3bb27570
      version: -1
      name: Was there a custom SHA1 field?
      description: Was there a custom SHA1 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '35'
      'yes':
      - '44'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarSHA1Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1170,
          "y": 1120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '34':
    id: '34'
    taskid: 5e0e679d-1b8a-4063-8951-9916eb0a1941
    type: playbook
    task:
      id: 5e0e679d-1b8a-4063-8951-9916eb0a1941
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.SHA1Fields)
                    ? val.SHA1Fields : [val.SHA1Fields]; var sha1s = Array.isArray(val.File.SHA1)
                    ? val.File.SHA1 : [val.File.SHA1]; return fields.map(field =>
                    sha1s.map(sha1 => field + " = " + "''" + sha1 + "''").join(''
                    OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -890,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '35':
    id: '35'
    taskid: cadbf1a2-b1a2-425b-8eba-27d3b1bcef19
    type: playbook
    task:
      id: cadbf1a2-b1a2-425b-8eba-27d3b1bcef19
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: =  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' TEXT SEARCH '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -1290,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '36':
    id: '36'
    taskid: 144625e6-beca-4702-8e43-6535c0c5b231
    type: regular
    task:
      id: 144625e6-beca-4702-8e43-6535c0c5b231
      version: -1
      name: Set MD5Fields to Array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '37'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: MD5Fields
      value:
        complex:
          root: inputs.QradarMD5Field
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2150,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '37':
    id: '37'
    taskid: 29758432-dd2d-4d9e-89f7-34b7e8bf96c2
    type: playbook
    task:
      id: 29758432-dd2d-4d9e-89f7-34b7e8bf96c2
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.MD5Fields)
                    ? val.MD5Fields : [val.MD5Fields]; var md5s = Array.isArray(val.File.MD5)
                    ? val.File.MD5 : [val.File.MD5]; return fields.map(field => md5s.map(md5
                    => field + " = " + "''" + md5 + "''").join('' OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -2150,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '38':
    id: '38'
    taskid: 90df4eba-f8c3-43c2-80fb-60f263e81598
    type: title
    task:
      id: 90df4eba-f8c3-43c2-80fb-60f263e81598
      version: -1
      name: SHA256 Search
      description: ''
      type: title
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '39'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -240,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '39':
    id: '39'
    taskid: 03655b77-c9c5-4dd4-8b1a-38ad2714627d
    type: condition
    task:
      id: 03655b77-c9c5-4dd4-8b1a-38ad2714627d
      version: -1
      name: Is there an SHA256 to search?
      description: Is there an SHA256 to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '40'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -240,
          "y": 800
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '40':
    id: '40'
    taskid: a2b7c643-6128-4bfa-8f01-768f821b20bb
    type: regular
    task:
      id: a2b7c643-6128-4bfa-8f01-768f821b20bb
      version: -1
      name: Set SHA256 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '41'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA256
      value:
        complex:
          root: inputs.SHA256
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -240,
          "y": 1105
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '41':
    id: '41'
    taskid: 2f33f05e-e17f-47d5-819f-11777b4f047a
    type: condition
    task:
      id: 2f33f05e-e17f-47d5-819f-11777b4f047a
      version: -1
      name: Was there a custom SHA256 field?
      description: Was there a custom SHA256 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '47'
      'yes':
      - '45'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarSHA256Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -240,
          "y": 1270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '44':
    id: '44'
    taskid: 733ce312-eca3-42fc-8afd-977a57091e2d
    type: regular
    task:
      id: 733ce312-eca3-42fc-8afd-977a57091e2d
      version: -1
      name: Set SHA1Fields to Array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '34'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: SHA1Fields
      value:
        complex:
          root: inputs.QradarSHA1Field
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -890,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '45':
    id: '45'
    taskid: 14b7f1ba-d6a5-4e39-839f-b431cf45cd7a
    type: regular
    task:
      id: 14b7f1ba-d6a5-4e39-839f-b431cf45cd7a
      version: -1
      name: Set SHA256Fields to Array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '46'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: SHA256Fields
      value:
        complex:
          root: inputs.QradarSHA256Field
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 30,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '46':
    id: '46'
    taskid: 46de2815-e3c8-46a2-85b0-46b4c01a01c5
    type: playbook
    task:
      id: 46de2815-e3c8-46a2-85b0-46b4c01a01c5
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.SHA256Fields)
                    ? val.SHA256Fields : [val.SHA256Fields]; var sha256s = Array.isArray(val.File.SHA256)
                    ? val.File.SHA256 : [val.File.SHA256]; return fields.map(field
                    => sha256s.map(sha256 => field + " = " + "''" + sha256 + "''").join(''
                    OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 30,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '47':
    id: '47'
    taskid: de346763-a988-4f62-874f-de0ed2c75bb5
    type: playbook
    task:
      id: de346763-a988-4f62-874f-de0ed2c75bb5
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: =  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' TEXT SEARCH '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -400,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '48':
    id: '48'
    taskid: 3656ecda-2522-45dc-8d6a-c8715441cc00
    type: title
    task:
      id: 3656ecda-2522-45dc-8d6a-c8715441cc00
      version: -1
      name: Done
      description: ''
      type: title
      iscommand: false
      brand: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 760,
          "y": 1980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '49':
    id: '49'
    taskid: 25341ed4-3633-4d63-868b-d06816ede475
    type: regular
    task:
      id: 25341ed4-3633-4d63-868b-d06816ede475
      version: -1
      name: Set IP to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '50'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: IP
      value:
        complex:
          root: inputs.IPAddress
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1470,
          "y": 705
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '50':
    id: '50'
    taskid: 585bb637-c271-42d8-81c1-54b431d6e1a8
    type: condition
    task:
      id: 585bb637-c271-42d8-81c1-54b431d6e1a8
      version: -1
      name: Was there a custom IP field?
      description: Was there a custom IP field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '53'
      'yes':
      - '51'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarIPfield
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1470,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '51':
    id: '51'
    taskid: 91bd5926-698a-45c7-8337-e908f4d8040a
    type: regular
    task:
      id: 91bd5926-698a-45c7-8337-e908f4d8040a
      version: -1
      name: Set IPFields to Array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '52'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: IPFields
      value:
        complex:
          root: inputs.QradarIPfield
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1590,
          "y": 1270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '52':
    id: '52'
    taskid: 3d44e29a-37ca-4526-8c85-d4669eb44077
    type: playbook
    task:
      id: 3d44e29a-37ca-4526-8c85-d4669eb44077
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.IPFields)
                    ? val.IPFields : [val.IPFields]; var ips = Array.isArray(val.IP)
                    ? val.IP : [val.IP]; return fields.map(field => ips.map(ip =>
                    field + " = " + "''" + ip + "''").join('' OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 1590,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '53':
    id: '53'
    taskid: aa6d8cc3-31b2-4938-850a-0e395c648b5f
    type: playbook
    task:
      id: aa6d8cc3-31b2-4938-850a-0e395c648b5f
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: =  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' TEXT SEARCH '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 1060,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '55':
    id: '55'
    taskid: b2934eaf-1e94-434d-88f4-b3ec9b4fb726
    type: condition
    task:
      id: b2934eaf-1e94-434d-88f4-b3ec9b4fb726
      version: -1
      name: Is Qradar enabled?
      description: Is Qradar enabled?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '2'
      - '5'
      - '6'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: '1'
            iscontext: true
          right:
            value:
              simple: '1'
    view: |-
      {
        "position": {
          "x": 760,
          "y": -90
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2305,
        "width": 6140,
        "x": -2620,
        "y": -240
      }
    }
  }
inputs:
- key: MD5
  value: {}
  required: false
  description: MD5 hash file or an array of hashes to search.
- key: QradarMD5Field
  value: {}
  required: false
  description: MD5 field to search in QRadar. If non are specified the search will
    use quick filter.
- key: SHA1
  value: {}
  required: false
  description: SHA1 hash file or an array of hashes to search.
- key: QradarSHA1Field
  value: {}
  required: false
  description: SHA1 field to search in QRadar. If non are specified the search will
    use quick filter.
- key: SHA256
  value: {}
  required: false
  description: SHA256 hash file or an array of hashes to search.
- key: QradarSHA256Field
  value: {}
  required: false
  description: SHA256 field to search in QRadar. If non are specified the search will
    use quick filter.
- key: IPAddress
  value: {}
  required: false
  description: |
    Source or destination IP to search. Can be a single address or an array of addresses.
- key: QradarIPfield
  value:
    simple: sourceip,destinationip
  required: false
  description: IP field to search in QRadar. If non are specified the search will
    use sourceip or destinationip (combined).
- key: URLDomain
  value: {}
  required: false
  description: |
    Domain or Url can be single or an array of domain/urls to search. By default the LIKE clause is used.
- key: URLDomainField
  value: {}
  required: false
  description: URL/Domain field to search in QRadar. If non are specified the search
    will use quick filter. Only one field can be used in this parameter.
- key: SelectFields
  value:
    simple: '*'
  required: true
  description: The fields to be used in the select. Use comma delimited field names
    as they appear in AQL. * is an acceptable value.
- key: TimeFrame
  value:
    simple: LAST 7 DAYS
  required: false
  description: |-
    Time frame as used in AQL
    Examples can be
    LAST 7 DAYS
    START '2019-09-25 15:51' STOP '2019-09-25 17:51'
    For more examples review IBM's AQL documentation.
outputs: []
tests:
  - Qradar Indicator Hunting Test
