id: QRadar Indicator Hunting
version: -1
fromversion: 4.5.0
name: QRadar Indicator Hunting
description: 'The Playbook queries QRadar SIEM for indicators such as file hashes,
  IP addresses, domains, or urls. '
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: 11fd0d4b-314c-44cd-8e44-838b3841c5dc
    type: start
    task:
      id: 11fd0d4b-314c-44cd-8e44-838b3841c5dc
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '55'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 760,
          "y": -240
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '2':
    id: '2'
    taskid: c65c2d96-ddec-4e30-84d7-64c86ed0d755
    type: title
    task:
      id: c65c2d96-ddec-4e30-84d7-64c86ed0d755
      version: -1
      name: Hash Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '8'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -670,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '3':
    id: '3'
    taskid: faf1a222-77d5-44a7-8a2a-64ae0fa938ee
    type: playbook
    task:
      id: faf1a222-77d5-44a7-8a2a-64ae0fa938ee
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '10'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.DomainURLFields)
                    ? val.DomainURLFields : [val.DomainURLFields]; var domainurls
                    = Array.isArray(val.DomainURL) ? val.DomainURL : [val.DomainURL];
                    return fields.map(field => domainurls.map(domainurl => "\"" +
                    field + "\" ILIKE " + "''%" + domainurl + "%''").join('' OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 2610,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '5':
    id: '5'
    taskid: eb5c14ba-4082-4242-89f3-8e0121f48b10
    type: title
    task:
      id: eb5c14ba-4082-4242-89f3-8e0121f48b10
      version: -1
      name: IP Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '7'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 990,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '6':
    id: '6'
    taskid: 0b3037a1-cfca-41d6-8820-0c3e776a1912
    type: title
    task:
      id: 0b3037a1-cfca-41d6-8820-0c3e776a1912
      version: -1
      name: Domain/Url Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '9'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '7':
    id: '7'
    taskid: 489133b9-4e76-4d41-89d5-964f94bb86ba
    type: condition
    task:
      id: 489133b9-4e76-4d41-89d5-964f94bb86ba
      version: -1
      name: Is there an IP to search?
      description: Is there an IP on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '49'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.IPAddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": 990,
          "y": 420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '8':
    id: '8'
    taskid: 7fe7ef38-53c1-49ce-82d0-069d0f5c3cb8
    type: condition
    task:
      id: 7fe7ef38-53c1-49ce-82d0-069d0f5c3cb8
      version: -1
      name: Is there a hash to search?
      description: Is there a hash on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '26'
      - '27'
      - '38'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -670,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '9':
    id: '9'
    taskid: ae02e4ba-1497-4fbb-8ba5-629e7b85d9fb
    type: condition
    task:
      id: ae02e4ba-1497-4fbb-8ba5-629e7b85d9fb
      version: -1
      name: Is there a domain or url to search?
      description: Is there a domain or URL on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '10'
      'yes':
      - '15'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomain
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '10':
    id: '10'
    taskid: ccc36777-6654-4f47-8b78-2335017fc05b
    type: title
    task:
      id: ccc36777-6654-4f47-8b78-2335017fc05b
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 2000
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '11':
    id: '11'
    taskid: c920b249-2758-4563-872b-2514ba03905e
    type: condition
    task:
      id: c920b249-2758-4563-872b-2514ba03905e
      version: -1
      name: Is there a custom domain or url field?
      description: Is there a custom domain or url field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '17'
      'yes':
      - '16'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomainField
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '15':
    id: '15'
    taskid: deaf1570-6faa-4b83-8335-d517c35ffa44
    type: regular
    task:
      id: deaf1570-6faa-4b83-8335-d517c35ffa44
      version: -1
      name: Set DomainUrl to array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '11'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: DomainURL
      value:
        complex:
          root: inputs.URLDomain
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 680
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '16':
    id: '16'
    taskid: 059a4a6a-b627-40f3-8f99-95e05394d40c
    type: regular
    task:
      id: 059a4a6a-b627-40f3-8f99-95e05394d40c
      version: -1
      name: Set DomainUrlFields to Array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '3'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: DomainURLFields
      value:
        complex:
          root: inputs.URLDomainField
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2610,
          "y": 1300
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '17':
    id: '17'
    taskid: 027ed83d-931b-4a6c-8ba9-a9c5d41ec0ab
    type: playbook
    task:
      id: 027ed83d-931b-4a6c-8ba9-a9c5d41ec0ab
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '10'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: DomainURL
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) ILIKE  '%$1%'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 3140,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '20':
    id: '20'
    taskid: a9657626-965c-4daa-8e15-11c5b03fda66
    type: regular
    task:
      id: a9657626-965c-4daa-8e15-11c5b03fda66
      version: -1
      name: Set MD5 to array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '21'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.MD5
      value:
        complex:
          root: inputs.MD5
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2340,
          "y": 950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '21':
    id: '21'
    taskid: 5ae1e84f-5851-4043-8b97-84aadd7e6087
    type: condition
    task:
      id: 5ae1e84f-5851-4043-8b97-84aadd7e6087
      version: -1
      name: Is there a custom MD5 field?
      description: Is there a custom MD5 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '23'
      'yes':
      - '36'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.QradarMD5Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -2340,
          "y": 1120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '22':
    id: '22'
    taskid: 53f28265-7caf-45be-88ab-e3fdc48f8dcc
    type: condition
    task:
      id: 53f28265-7caf-45be-88ab-e3fdc48f8dcc
      version: -1
      name: Is there an MD5 to search?
      description: Is there an MD5 on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '20'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1930,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '23':
    id: '23'
    taskid: cc8b421f-92bd-49a2-80df-dc5445d2f24d
    type: playbook
    task:
      id: cc8b421f-92bd-49a2-80df-dc5445d2f24d
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) LIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -2620,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '25':
    id: '25'
    taskid: 2f253420-222c-4f67-82d4-39a1509cca03
    type: title
    task:
      id: 2f253420-222c-4f67-82d4-39a1509cca03
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -670,
          "y": 1980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '26':
    id: '26'
    taskid: dda895b8-450a-49cc-8551-d8cc0bc646ee
    type: title
    task:
      id: dda895b8-450a-49cc-8551-d8cc0bc646ee
      version: -1
      name: MD5 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '22'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1930,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '27':
    id: '27'
    taskid: 0adbc131-487a-4d43-8d93-8b981714a1be
    type: title
    task:
      id: 0adbc131-487a-4d43-8d93-8b981714a1be
      version: -1
      name: SHA1 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '29'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1520,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '29':
    id: '29'
    taskid: 508ad137-900b-42a4-89ae-68b921db82cb
    type: condition
    task:
      id: 508ad137-900b-42a4-89ae-68b921db82cb
      version: -1
      name: Is there a SHA1 to search?
      description: Is there a SHA1 hash on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '30'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1520,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '30':
    id: '30'
    taskid: 3c3f860f-f633-4839-8235-9b2c800274fe
    type: regular
    task:
      id: 3c3f860f-f633-4839-8235-9b2c800274fe
      version: -1
      name: Set SHA1 to array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '31'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA1
      value:
        complex:
          root: inputs.SHA1
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1170,
          "y": 950
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '31':
    id: '31'
    taskid: 1cc5d94d-f2c7-465d-8c12-7050ce5fc143
    type: condition
    task:
      id: 1cc5d94d-f2c7-465d-8c12-7050ce5fc143
      version: -1
      name: Was there a custom SHA1 field?
      description: Was there a custom SHA1 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '35'
      'yes':
      - '44'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarSHA1Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1170,
          "y": 1120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '34':
    id: '34'
    taskid: e03160a2-8d17-4a1d-885d-b5228e3fa76e
    type: playbook
    task:
      id: e03160a2-8d17-4a1d-885d-b5228e3fa76e
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.SHA1Fields)
                    ? val.SHA1Fields : [val.SHA1Fields]; var sha1s = Array.isArray(val.File.SHA1)
                    ? val.File.SHA1 : [val.File.SHA1]; return fields.map(field =>
                    sha1s.map(sha1 => "\"" + field + "\"  = " + "''" + sha1 + "''").join(''
                    OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -890,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '35':
    id: '35'
    taskid: 385b6f43-01f8-4b93-8ba4-8752e81ec646
    type: playbook
    task:
      id: 385b6f43-01f8-4b93-8ba4-8752e81ec646
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) LIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -1290,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '36':
    id: '36'
    taskid: 2a8cbd53-1f58-417b-8537-c99c2f95446a
    type: regular
    task:
      id: 2a8cbd53-1f58-417b-8537-c99c2f95446a
      version: -1
      name: Set MD5Fields to Array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '37'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: MD5Fields
      value:
        complex:
          root: inputs.QradarMD5Field
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2150,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '37':
    id: '37'
    taskid: 1967221e-abe7-4306-828f-3450e762a2fa
    type: playbook
    task:
      id: 1967221e-abe7-4306-828f-3450e762a2fa
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.MD5Fields)
                    ? val.MD5Fields : [val.MD5Fields]; var md5s = Array.isArray(val.File.MD5)
                    ? val.File.MD5 : [val.File.MD5]; return fields.map(field => md5s.map(md5
                    => "\"" + field + "\"  = " + "''" + md5 + "''").join('' OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -2150,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '38':
    id: '38'
    taskid: 05a453f8-894c-40cc-8819-9e730340b485
    type: title
    task:
      id: 05a453f8-894c-40cc-8819-9e730340b485
      version: -1
      name: SHA256 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '39'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -240,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '39':
    id: '39'
    taskid: a7e95226-d38d-4b22-827b-e1e83e3edaf3
    type: condition
    task:
      id: a7e95226-d38d-4b22-827b-e1e83e3edaf3
      version: -1
      name: Is there a SHA256 to search?
      description: Is there a SHA256 hash on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '40'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -240,
          "y": 800
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '40':
    id: '40'
    taskid: ae26ff38-de73-4223-8b2e-2d88ef738777
    type: regular
    task:
      id: ae26ff38-de73-4223-8b2e-2d88ef738777
      version: -1
      name: Set SHA256 to array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '41'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA256
      value:
        complex:
          root: inputs.SHA256
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -240,
          "y": 1105
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '41':
    id: '41'
    taskid: d6fd61b9-c6e4-4781-8cde-d5978597cb32
    type: condition
    task:
      id: d6fd61b9-c6e4-4781-8cde-d5978597cb32
      version: -1
      name: Is there a custom SHA256 field?
      description: Is there a custom SHA256 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '47'
      'yes':
      - '45'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarSHA256Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -240,
          "y": 1270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '44':
    id: '44'
    taskid: 03a566d6-af4a-4b61-8546-95174cdf4f65
    type: regular
    task:
      id: 03a566d6-af4a-4b61-8546-95174cdf4f65
      version: -1
      name: Set SHA1Fields to Array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '34'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: SHA1Fields
      value:
        complex:
          root: inputs.QradarSHA1Field
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -890,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '45':
    id: '45'
    taskid: 3d8f9a29-1344-436a-8c4f-3cfe1c42075c
    type: regular
    task:
      id: 3d8f9a29-1344-436a-8c4f-3cfe1c42075c
      version: -1
      name: Set SHA256Fields to Array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '46'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: SHA256Fields
      value:
        complex:
          root: inputs.QradarSHA256Field
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 30,
          "y": 1480
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '46':
    id: '46'
    taskid: 55b39738-d6d3-4580-82af-66d5f3bf547e
    type: playbook
    task:
      id: 55b39738-d6d3-4580-82af-66d5f3bf547e
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.SHA256Fields)
                    ? val.SHA256Fields : [val.SHA256Fields]; var sha256s = Array.isArray(val.File.SHA256)
                    ? val.File.SHA256 : [val.File.SHA256]; return fields.map(field
                    => sha256s.map(sha256 => "\"" + field + "\" = " + "''" + sha256
                    + "''").join('' OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 30,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '47':
    id: '47'
    taskid: a9c0e063-8ed6-4cd0-81ca-9abd768cad52
    type: playbook
    task:
      id: a9c0e063-8ed6-4cd0-81ca-9abd768cad52
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) ILIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -400,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '48':
    id: '48'
    taskid: fc6a9fb5-82b5-4c69-825d-da8c1b78dcb5
    type: title
    task:
      id: fc6a9fb5-82b5-4c69-825d-da8c1b78dcb5
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 760,
          "y": 1980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '49':
    id: '49'
    taskid: 1c3122db-727e-473d-87ff-ec6346f840f1
    type: regular
    task:
      id: 1c3122db-727e-473d-87ff-ec6346f840f1
      version: -1
      name: Set IP to array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '50'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: IP
      value:
        complex:
          root: inputs.IPAddress
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1470,
          "y": 705
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '50':
    id: '50'
    taskid: 9876a1b6-710d-4c95-8655-730b81330513
    type: condition
    task:
      id: 9876a1b6-710d-4c95-8655-730b81330513
      version: -1
      name: Is there a custom IP field?
      description: Is there a custom IP field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '53'
      'yes':
      - '51'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarIPfield
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1470,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '51':
    id: '51'
    taskid: 7f569d8a-1c5f-48d9-8625-3ad9a7cf207c
    type: regular
    task:
      id: 7f569d8a-1c5f-48d9-8625-3ad9a7cf207c
      version: -1
      name: Set IPFields to Array
      description: Sets a value into the context with the given context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '52'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: IPFields
      value:
        complex:
          root: inputs.QradarIPfield
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1590,
          "y": 1270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '52':
    id: '52'
    taskid: 89385b46-2183-42af-8e70-8b714a4ed1e2
    type: playbook
    task:
      id: 89385b46-2183-42af-8e70-8b714a4ed1e2
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: .
          transformers:
          - operator: DT
            args:
              dt:
                value:
                  simple: '.=function(val){var fields = Array.isArray(val.IPFields)
                    ? val.IPFields : [val.IPFields]; var ips = Array.isArray(val.IP)
                    ? val.IP : [val.IP]; return fields.map(field => ips.map(ip =>
                    "\"" + field + "\" = " + "''" + ip + "''").join('' OR ''))}(val)'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 1590,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '53':
    id: '53'
    taskid: 4fe83f80-55c1-4d0b-80b4-0e06b80bc549
    type: playbook
    task:
      id: 4fe83f80-55c1-4d0b-80b4-0e06b80bc549
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: IP
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) LIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 1060,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '55':
    id: '55'
    taskid: 1456427e-d871-4303-836a-b4cf9876b189
    type: condition
    task:
      id: 1456427e-d871-4303-836a-b4cf9876b189
      version: -1
      name: Is Qradar enabled?
      description: Is Qradar enabled?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '2'
      - '5'
      - '6'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isExists
          left:
            value:
              simple: modules.brand
            iscontext: true
      - - operator: isEqualString
          left:
            value:
              simple: modules.brand
            iscontext: true
          right:
            value:
              simple: QRadar
      - - operator: isEqualString
          left:
            value:
              simple: modules.state
            iscontext: true
          right:
            value:
              simple: active
    view: |-
      {
        "position": {
          "x": 760,
          "y": -90
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2305,
        "width": 6140,
        "x": -2620,
        "y": -240
      }
    }
  }
inputs:
- key: MD5
  value: {}
  required: false
  description: MD5 hash file or an array of hashes to search.
- key: QradarMD5Field
  value: {}
  required: false
  description: MD5 field to search in QRadar. If none are specified, the search will
    use a quick filter.
- key: SHA1
  value: {}
  required: false
  description: SHA1 hash file or an array of hashes to search.
- key: QradarSHA1Field
  value: {}
  required: false
  description: SHA1 field to search in QRadar. If none are specified, the search will
    use a quick filter.
- key: SHA256
  value: {}
  required: false
  description: SHA256 hash file or an array of hashes to search.
- key: QradarSHA256Field
  value: {}
  required: false
  description: SHA256 field to search in QRadar. If none are specified, the search will
    use a quick filter.
- key: IPAddress
  value: {}
  required: false
  description: |
    Source or destination IP to search. Can be a single address or an array of addresses.
- key: QradarIPfield
  value:
    simple: sourceip,destinationip
  required: false
  description: IP field to search in QRadar. If none are specified, the search will
    use sourceip or destinationip (combined).
- key: URLDomain
  value: {}
  required: false
  description: |
    Domain or Url can be single or an array of domain/urls to search. By default the LIKE clause is used.
- key: URLDomainField
  value: {}
  required: false
  description: URL/Domain field to search in QRadar. If none are specified, the search
    will use a quick filter. Only one field can be used in this parameter.
- key: SelectFields
  value:
    simple: '*'
  required: true
  description: The fields to be used in the select. Use comma delimited field names
    as they appear in AQL. * is an acceptable value.
- key: TimeFrame
  value:
    simple: LAST 7 DAYS
  required: false
  description: |-
    Time frame as used in AQL
    Examples can be
    LAST 7 DAYS
    START '2019-09-25 15:51' STOP '2019-09-25 17:51'
    For more examples review IBM's AQL documentation.
outputs:
- contextPath: QRadar.Search.Result
  type: string

tests:
- QRadar Indicator Hunting Test