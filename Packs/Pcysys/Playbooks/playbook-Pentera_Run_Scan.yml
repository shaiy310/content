id: Pentera Run Scan
version: -1
contentitemexportablefields:
  contentitemfields:
    propagationLabels:
    - all
name: Pentera Run Scan
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: "37"
    type: start
    task:
      id: "37"
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "1":
    id: "1"
    taskid: "38"
    type: regular
    task:
      id: "38"
      version: -1
      name: Run Pentera Template
      script: '|||pentera-run-template-by-name'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      template_name:
        simple: ${inputs.PenteraTaskName}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 340
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "2":
    id: "2"
    taskid: "42"
    type: playbook
    task:
      id: "42"
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        simple: ${Pentera.TaskRun.ID}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: task_run_id
      PollingCommandName:
        simple: pentera-get-task-run-status
      Timeout:
        simple: "60"
      dt:
        simple: Pentera.TaskRun(val.Status != 'Done').ID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 50,
          "y": 660
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "3":
    id: "3"
    taskid: "33"
    type: title
    task:
      id: "33"
      version: -1
      name: Start the Scan
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "4":
    id: "4"
    taskid: "34"
    type: title
    task:
      id: "34"
      version: -1
      name: Wait For The Scan To Complete
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 515
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "5":
    id: "5"
    taskid: "35"
    type: title
    task:
      id: "35"
      version: -1
      name: Collect The Full Action Report
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 835
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
  "6":
    id: "6"
    taskid: "36"
    type: regular
    task:
      id: "36"
      version: -1
      name: Retrieve The Full Action Report
      script: '|||pentera-get-task-run-full-action-report'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      task_run_id:
        simple: ${Pentera.TaskRun.ID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 980
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quiet: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1025,
        "width": 380,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: PenteraTaskName
  value: {}
  required: true
  description: The name of the Pentera task to run
  playbookInputQuery: null
outputs: []
